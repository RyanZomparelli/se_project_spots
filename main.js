/*! For license information please see main.js.LICENSE.txt */
!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button-submit",inactiveButtonClass:"modal__button-submit_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_active"},t=(e,t,r)=>{const n=e.querySelector(`.${t.id}-error`);n.textContent="",n.classList.remove(r.errorClass),t.classList.remove(r.inputErrorClass)},r=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0},n=(e,t,n)=>{(e=>e.some(e=>!e.validity.valid))(e)?r(t,n):(t.classList.remove(n.inactiveButtonClass),t.disabled=!1)},o=e=>{document.querySelectorAll(e.formSelector).forEach(r=>{((e,r)=>{const o=Array.from(e.querySelectorAll(r.inputSelector)),a=e.querySelector(r.submitButtonSelector);n(o,a,r),o.forEach(s=>{s.addEventListener("input",()=>{((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const o=e.querySelector(`.${t.id}-error`);o.textContent=r,o.classList.add(n.errorClass),t.classList.add(n.inputErrorClass)})(e,r,r.validationMessage,n)})(e,s,r),n(o,a,r)})})})(r,e)})};o(e);const a=document.querySelector(".profile__edit-button"),s=document.querySelector("#edit-profile-modal"),c=s.querySelector(".modal__button-close"),i=s.querySelector(".modal__button-submit"),d=document.querySelector(".cards__list"),l=document.querySelector("#new-post-modal"),u=document.querySelector(".profile__button-add"),m=l.querySelector(".modal__button-close"),_=l.querySelector(".modal__button-submit"),h=document.querySelector(".profile__avatar-button"),v=document.querySelector("#avatar-modal"),p=v.querySelector(".modal__button-close"),y=v.querySelector("#image-input"),b=v.querySelector(".modal__button-submit"),f=document.getElementById("profile-avatar"),S=document.querySelector(".profile__name"),q=s.querySelector("#name-input"),L=document.querySelector(".profile__description"),E=s.querySelector("#description-input"),k=l.querySelector("#image-input"),C=l.querySelector("#caption-input"),g=document.forms["edit-profile"],U=document.forms["new-post"],x=document.forms["delete-card"],$=document.forms["new-avatar"],A=document.querySelector("#preview-modal"),D=A.querySelector(".modal__button-close"),w=A.querySelector(".modal__img"),R=A.querySelector(".modal__caption"),I=document.querySelector("#delete-card-modal"),B=I.querySelector(".modal__button-close"),N=I.querySelector("#cancel"),P=I.querySelector(".modal__button-submit"),T=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_handleResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleResponse)}_getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleResponse)}getAppData(){return Promise.all([this._getInitialCards(),this._getUserInfo()])}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._handleResponse)}addNewCard({name:e,link:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._handleResponse)}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._handleResponse)}editAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._handleResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"640264a7-d833-4076-a643-c71cc77da761","content-type":"application/json"}});function O(e){e.classList.add("modal_is-opened"),document.addEventListener("keydown",J)}function j(e){e.classList.remove("modal_is-opened"),document.removeEventListener("keydown",J)}function J(e){H.forEach(t=>{"Escape"===e.key&&j(t)})}T.getAppData().then(e=>{const[t,r]=e;t.forEach(e=>{const t=K(e);d.append(t)}),f.src=r.avatar,S.textContent=r.name,L.textContent=r.about}).catch(e=>console.error(e)),o(e);const H=document.querySelectorAll(".modal");let z,M;function F(e){!0===e.disabled?e.textContent="Save":e.textContent="Saving"}H.forEach(e=>(e=>{e.addEventListener("click",t=>{t.target.closest(".modal__container")||j(e)})})(e)),u.addEventListener("click",()=>{F(_),O(l)}),a.addEventListener("click",function(){var r,n;F(i),O(s),r=g,n=e,[q,E].forEach(e=>{t(r,e,n)}),q.value=S.textContent,E.value=L.textContent}),U.addEventListener("submit",function(t){t.preventDefault();const n={name:C.value,link:k.value};T.addNewCard(n).then(t=>{F(_);const n=K(t);d.prepend(n),U.reset(),j(l),r(_,e)}).catch(e=>console.error(e))}),g.addEventListener("submit",function(t){t.preventDefault();const n={name:q.value,about:E.value};T.editUserInfo(n).then(t=>{F(i),S.textContent=t.name,L.textContent=t.about,j(s),r(i,e)}).catch(e=>console.error(e))}),c.addEventListener("click",()=>j(s)),m.addEventListener("click",()=>j(l)),D.addEventListener("click",()=>j(A)),B.addEventListener("click",()=>j(I)),N.addEventListener("click",()=>j(I)),p.addEventListener("click",()=>j(v)),x.addEventListener("submit",e=>{e.preventDefault(),function(e,t){T.removeCard(t).then(()=>{P.textContent="Deleting",e.remove(),j(I)}).catch(e=>console.error(e))}(z,M)}),h.addEventListener("click",e=>{F(b),O(v)}),$.addEventListener("submit",t=>{t.preventDefault(),T.editAvatar(y.value).then(t=>{F(b),f.src=t.avatar,j(v),r(b,e)}).catch(e=>console.error(e))});const G=(e,t)=>{e?t.classList.add("card__like-button_active"):t.classList.remove("card__like-button_active")};function K(e){const t=document.querySelector("#card-template").content.querySelector(".card").cloneNode(!0);t.querySelector(".card__title").textContent=e.name;const r=t.querySelector(".card__image");r.src=e.link,r.alt=e.name;const n=t.querySelector(".card__like-button");return G(e.isLiked,n),n.addEventListener("click",()=>{n.classList.contains("card__like-button_active")?T.removeLike(e._id).then(e=>{G(e.isLiked,n)}).catch(e=>console.error(e)):T.addLike(e._id).then(e=>{G(e.isLiked,n)}).catch(e=>console.error(e))}),t.querySelector(".card__delete-button").addEventListener("click",()=>{!function(e,t){z=e,M=t._id,P.textContent="Delete",O(I)}(t,e)}),t.addEventListener("click",function(t){t.target===r&&(O(A),w.src=e.link,w.alt=e.name,R.textContent=e.name)}),t}}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QUVsQ3BCLE1BQU9DLEdBQVVDLFFBQVFELE1BQU1BLE1BSWhCb0IsRUFBWTFJLGNBQWMsd0JBQ2xDeUIsaUJBQWlCLFFBQVMsTUFyRzFDLFNBQTBCeUgsRUFBYXJDLEdBQ3JDVyxFQUFlMEIsRUFDZnpCLEVBQWlCWixFQUFLbUMsSUFDdEJoRixFQUFnQjlELFlBQWMsU0FDOUJtRyxFQUFVeEMsRUFDWixDQWlHSXNGLENBQWlCVCxFQUFhN0IsS0FHaEM2QixFQUFZakgsaUJBQWlCLFFBQVMsU0FBVXdHLEdBQzFDQSxFQUFJTCxTQUFXaUIsSUFDakJ4QyxFQUFVNUMsR0FDVkUsRUFBYXlELElBQU1QLEVBQUtmLEtBQ3hCbkMsRUFBYW1GLElBQU1qQyxFQUFLdEIsS0FDeEIzQixFQUFlMUQsWUFBYzJHLEVBQUt0QixLQUV0QyxHQUVPbUQsQ0FDVCIsInNvdXJjZXMiOlsid2VicGFjazovL3NlX3Byb2plY3Rfc3BvdHMvLi9zcmMvc2NyaXB0cy92YWxpZGF0aW9uLmpzIiwid2VicGFjazovL3NlX3Byb2plY3Rfc3BvdHMvLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9zcG90cy8uL3NyYy9zY3JpcHRzL0FwaS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBzZXR0aW5ncyA9IHtcbiAgZm9ybVNlbGVjdG9yOiBcIi5tb2RhbF9fZm9ybVwiLFxuICBpbnB1dFNlbGVjdG9yOiBcIi5tb2RhbF9faW5wdXRcIixcbiAgc3VibWl0QnV0dG9uU2VsZWN0b3I6IFwiLm1vZGFsX19idXR0b24tc3VibWl0XCIsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwibW9kYWxfX2J1dHRvbi1zdWJtaXRfZGlzYWJsZWRcIixcbiAgaW5wdXRFcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dF90eXBlX2Vycm9yXCIsXG4gIGVycm9yQ2xhc3M6IFwibW9kYWxfX2lucHV0LWVycm9yX2FjdGl2ZVwiLFxufTtcblxuY29uc3Qgc2hvd0lucHV0RXJyb3IgPSAoZm9ybUVsLCBpbnB1dEVsLCBlcnJvck1zZywgY29uZmlnKSA9PiB7XG4gIGNvbnN0IGlucHV0RXJyb3IgPSBmb3JtRWwucXVlcnlTZWxlY3RvcihgLiR7aW5wdXRFbC5pZH0tZXJyb3JgKTtcbiAgaW5wdXRFcnJvci50ZXh0Q29udGVudCA9IGVycm9yTXNnO1xuICBpbnB1dEVycm9yLmNsYXNzTGlzdC5hZGQoY29uZmlnLmVycm9yQ2xhc3MpO1xuICBpbnB1dEVsLmNsYXNzTGlzdC5hZGQoY29uZmlnLmlucHV0RXJyb3JDbGFzcyk7XG59O1xuXG5jb25zdCBoaWRlSW5wdXRFcnJvciA9IChmb3JtRWwsIGlucHV0RWwsIGNvbmZpZykgPT4ge1xuICBjb25zdCBpbnB1dEVycm9yID0gZm9ybUVsLnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWwuaWR9LWVycm9yYCk7XG4gIGlucHV0RXJyb3IudGV4dENvbnRlbnQgPSBcIlwiO1xuICBpbnB1dEVycm9yLmNsYXNzTGlzdC5yZW1vdmUoY29uZmlnLmVycm9yQ2xhc3MpO1xuICBpbnB1dEVsLmNsYXNzTGlzdC5yZW1vdmUoY29uZmlnLmlucHV0RXJyb3JDbGFzcyk7XG59O1xuXG5jb25zdCBjaGVja0lucHV0VmFsaWRpdHkgPSAoZm9ybUVsLCBpbnB1dEVsLCBjb25maWcpID0+IHtcbiAgaWYgKCFpbnB1dEVsLnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgc2hvd0lucHV0RXJyb3IoZm9ybUVsLCBpbnB1dEVsLCBpbnB1dEVsLnZhbGlkYXRpb25NZXNzYWdlLCBjb25maWcpO1xuICB9IGVsc2Uge1xuICAgIGhpZGVJbnB1dEVycm9yKGZvcm1FbCwgaW5wdXRFbCwgY29uZmlnKTtcbiAgfVxufTtcblxuLy9Vc2VkIHRvIHJlc2V0IHRoZSBlZGl0LXByb2ZpbGUgZm9ybSB2YWxpZGF0aW9uIG1lc3NhZ2VzXG5jb25zdCByZXNldFZhbGlkYXRpb24gPSAoZm9ybUVsLCBpbnB1dHMsIGNvbmZpZykgPT4ge1xuICBpbnB1dHMuZm9yRWFjaCgoaW5wdXQpID0+IHtcbiAgICBoaWRlSW5wdXRFcnJvcihmb3JtRWwsIGlucHV0LCBjb25maWcpO1xuICB9KTtcbn07XG5cbmNvbnN0IGhhc0ludmFsaWRJbnB1dCA9IChpbnB1dHMpID0+IHtcbiAgcmV0dXJuIGlucHV0cy5zb21lKChpbnB1dCkgPT4ge1xuICAgIHJldHVybiAhaW5wdXQudmFsaWRpdHkudmFsaWQ7XG4gIH0pO1xufTtcblxuY29uc3QgZGlzYWJsZVN1Ym1pdEJ1dHRvbiA9IChidXR0b25FbCwgY29uZmlnKSA9PiB7XG4gIGJ1dHRvbkVsLmNsYXNzTGlzdC5hZGQoY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICBidXR0b25FbC5kaXNhYmxlZCA9IHRydWU7XG59O1xuXG5jb25zdCB0b2dnbGVTdWJtaXRCdXR0b24gPSAoaW5wdXRzLCBidXR0b25FbCwgY29uZmlnKSA9PiB7XG4gIGlmIChoYXNJbnZhbGlkSW5wdXQoaW5wdXRzKSkge1xuICAgIGRpc2FibGVTdWJtaXRCdXR0b24oYnV0dG9uRWwsIGNvbmZpZyk7XG4gIH0gZWxzZSB7XG4gICAgYnV0dG9uRWwuY2xhc3NMaXN0LnJlbW92ZShjb25maWcuaW5hY3RpdmVCdXR0b25DbGFzcyk7XG4gICAgYnV0dG9uRWwuZGlzYWJsZWQgPSBmYWxzZTtcbiAgfVxufTtcblxuY29uc3Qgc2V0RXZlbnRMaXN0ZW5lcnMgPSAoZm9ybUVsLCBjb25maWcpID0+IHtcbiAgY29uc3QgaW5wdXRMaXN0ID0gQXJyYXkuZnJvbShmb3JtRWwucXVlcnlTZWxlY3RvckFsbChjb25maWcuaW5wdXRTZWxlY3RvcikpO1xuICBjb25zdCBzdWJtaXRCdG4gPSBmb3JtRWwucXVlcnlTZWxlY3Rvcihjb25maWcuc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuXG4gIHRvZ2dsZVN1Ym1pdEJ1dHRvbihpbnB1dExpc3QsIHN1Ym1pdEJ0biwgY29uZmlnKTtcblxuICBpbnB1dExpc3QuZm9yRWFjaCgoaW5wdXRFbCkgPT4ge1xuICAgIGlucHV0RWwuYWRkRXZlbnRMaXN0ZW5lcihcImlucHV0XCIsICgpID0+IHtcbiAgICAgIGNoZWNrSW5wdXRWYWxpZGl0eShmb3JtRWwsIGlucHV0RWwsIGNvbmZpZyk7XG4gICAgICB0b2dnbGVTdWJtaXRCdXR0b24oaW5wdXRMaXN0LCBzdWJtaXRCdG4sIGNvbmZpZyk7XG4gICAgfSk7XG4gIH0pO1xufTtcblxuY29uc3QgZW5hYmxlVmFsaWRhdGlvbiA9IChjb25maWcpID0+IHtcbiAgY29uc3QgZm9ybUxpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKGNvbmZpZy5mb3JtU2VsZWN0b3IpO1xuICBmb3JtTGlzdC5mb3JFYWNoKChmb3JtRWwpID0+IHtcbiAgICBzZXRFdmVudExpc3RlbmVycyhmb3JtRWwsIGNvbmZpZyk7XG4gIH0pO1xufTtcblxuZW5hYmxlVmFsaWRhdGlvbihzZXR0aW5ncyk7XG5cbmV4cG9ydCB7IGVuYWJsZVZhbGlkYXRpb24sIHJlc2V0VmFsaWRhdGlvbiwgZGlzYWJsZVN1Ym1pdEJ1dHRvbiwgc2V0dGluZ3MgfTtcbiIsImltcG9ydCBcIi4vaW5kZXguY3NzXCI7XG5pbXBvcnQge1xuICBlbmFibGVWYWxpZGF0aW9uLFxuICByZXNldFZhbGlkYXRpb24sXG4gIGRpc2FibGVTdWJtaXRCdXR0b24sXG4gIHNldHRpbmdzLFxufSBmcm9tIFwiLi4vc2NyaXB0cy92YWxpZGF0aW9uLmpzXCI7XG5cbmltcG9ydCBBUEkgZnJvbSBcIi4uL3NjcmlwdHMvQXBpLmpzXCI7XG5cbi8vIFNlbGVjdHMgRWRpdCBwcm9maWxlIG1vZGFsIGFuZCBidXR0b25zXG5jb25zdCBlZGl0TW9kYWxPcGVuQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19lZGl0LWJ1dHRvblwiKTtcbmNvbnN0IGVkaXRQcm9maWxlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VkaXQtcHJvZmlsZS1tb2RhbFwiKTtcbmNvbnN0IGVkaXRNb2RhbENsb3NlQnRuID0gZWRpdFByb2ZpbGVNb2RhbC5xdWVyeVNlbGVjdG9yKFxuICBcIi5tb2RhbF9fYnV0dG9uLWNsb3NlXCJcbik7XG5jb25zdCBlZGl0UHJvZmlsZVN1Ym1pdEJ0biA9IGVkaXRQcm9maWxlTW9kYWwucXVlcnlTZWxlY3RvcihcbiAgXCIubW9kYWxfX2J1dHRvbi1zdWJtaXRcIlxuKTtcblxuLy8gU2VsZWN0cyB0aGUgPHVsPiBlbGVtZW50IGZyb20gdGhlIGh0bWwgdG8gYWNjZXB0IHRoZSBuZXdseSBjcmVhdGVkIGNhcmRzXG5jb25zdCBjYXJkc0xpc3QgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRzX19saXN0XCIpO1xuXG4vLyBTZWxlY3RzIE5ldyBwb3N0IG1vZGFsIGFuZCBidXR0b25zXG5jb25zdCBuZXdQb3N0TW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI25ldy1wb3N0LW1vZGFsXCIpO1xuY29uc3QgbmV3UG9zdE9wZW5CdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2J1dHRvbi1hZGRcIik7XG5jb25zdCBuZXdQb3N0Q2xvc2VCdG4gPSBuZXdQb3N0TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fYnV0dG9uLWNsb3NlXCIpO1xuY29uc3QgbmV3UG9zdFN1Ym1pdEJ0biA9IG5ld1Bvc3RNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19idXR0b24tc3VibWl0XCIpO1xuXG4vLyBTZWxlY3RzIHByb2ZpbGUgc2VjdGlvbiBlbGVtZW50c1xuY29uc3QgZWRpdEF2YXRhck9wZW5CdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2F2YXRhci1idXR0b25cIik7XG5jb25zdCBlZGl0QXZhdGFyTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2F2YXRhci1tb2RhbFwiKTtcbmNvbnN0IGVkaXRBdmF0YXJDbG9zZUJ0biA9IGVkaXRBdmF0YXJNb2RhbC5xdWVyeVNlbGVjdG9yKFxuICBcIi5tb2RhbF9fYnV0dG9uLWNsb3NlXCJcbik7XG5jb25zdCBhdmF0YXJJbnB1dCA9IGVkaXRBdmF0YXJNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI2ltYWdlLWlucHV0XCIpO1xuY29uc3QgZWRpdEF2YXRhclN1Ym1pdEJ0biA9IGVkaXRBdmF0YXJNb2RhbC5xdWVyeVNlbGVjdG9yKFxuICBcIi5tb2RhbF9fYnV0dG9uLXN1Ym1pdFwiXG4pO1xuY29uc3QgcHJvZmlsZUF2YXRhciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKFwicHJvZmlsZS1hdmF0YXJcIik7XG5jb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fbmFtZVwiKTtcbmNvbnN0IG5hbWVJbnB1dCA9IGVkaXRQcm9maWxlTW9kYWwucXVlcnlTZWxlY3RvcihcIiNuYW1lLWlucHV0XCIpO1xuY29uc3QgcHJvZmlsZURlc2NyaXB0aW9uID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wcm9maWxlX19kZXNjcmlwdGlvblwiKTtcbmNvbnN0IGRlc2NyaXB0aW9uSW5wdXQgPSBlZGl0UHJvZmlsZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIjZGVzY3JpcHRpb24taW5wdXRcIik7XG5cbi8vIFNlbGVjdHMgbmV3IHBvc3QgaW5wdXRzXG5jb25zdCBsaW5rSW5wdXQgPSBuZXdQb3N0TW9kYWwucXVlcnlTZWxlY3RvcihcIiNpbWFnZS1pbnB1dFwiKTtcbmNvbnN0IGNhcHRpb25JbnB1dCA9IG5ld1Bvc3RNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI2NhcHRpb24taW5wdXRcIik7XG5cbi8vIFNlbGVjdHMgZWFjaCBmb3JtXG5jb25zdCBlZGl0UHJvZmlsZUZvcm0gPSBkb2N1bWVudC5mb3Jtc1tcImVkaXQtcHJvZmlsZVwiXTtcbmNvbnN0IG5ld1Bvc3RGb3JtID0gZG9jdW1lbnQuZm9ybXNbXCJuZXctcG9zdFwiXTtcbmNvbnN0IGNhcmREZWxldGVGb3JtID0gZG9jdW1lbnQuZm9ybXNbXCJkZWxldGUtY2FyZFwiXTtcbmNvbnN0IG5ld0F2YXRhckZvcm0gPSBkb2N1bWVudC5mb3Jtc1tcIm5ldy1hdmF0YXJcIl07XG5cbi8vIFNlbGVjdHMgUHJldmlldyBtb2RhbCBlbGVtZW50c1xuY29uc3QgcHJldmlld01vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNwcmV2aWV3LW1vZGFsXCIpO1xuY29uc3QgcHJldmlld0Nsb3NlQnRuID0gcHJldmlld01vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2J1dHRvbi1jbG9zZVwiKTtcbmNvbnN0IHByZXZpZXdJbWFnZSA9IHByZXZpZXdNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19pbWdcIik7XG5jb25zdCBwcmV2aWV3Q2FwdGlvbiA9IHByZXZpZXdNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19jYXB0aW9uXCIpO1xuXG4vL1NlbGVjdHMgZGVsZXRlIG1vZGFsIGFuZCBidXR0b25zXG5jb25zdCBkZWxldGVDYXJkTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2RlbGV0ZS1jYXJkLW1vZGFsXCIpO1xuY29uc3QgZGVsZXRlQ2FyZE1vZGFsQ2xvc2VCdG4gPSBkZWxldGVDYXJkTW9kYWwucXVlcnlTZWxlY3RvcihcbiAgXCIubW9kYWxfX2J1dHRvbi1jbG9zZVwiXG4pO1xuY29uc3QgY2FuY2VsQnRuID0gZGVsZXRlQ2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIjY2FuY2VsXCIpO1xuY29uc3QgZGVsZXRlU3VibWl0QnRuID0gZGVsZXRlQ2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2J1dHRvbi1zdWJtaXRcIik7XG5cbmNvbnN0IGFwaSA9IG5ldyBBUEkoe1xuICBiYXNlVXJsOiBcImh0dHBzOi8vYXJvdW5kLWFwaS5lbi50cmlwbGV0ZW4tc2VydmljZXMuY29tL3YxXCIsXG4gIGhlYWRlcnM6IHtcbiAgICBhdXRob3JpemF0aW9uOiBcIjY0MDI2NGE3LWQ4MzMtNDA3Ni1hNjQzLWM3MWNjNzdkYTc2MVwiLFxuICAgIFwiY29udGVudC10eXBlXCI6IFwiYXBwbGljYXRpb24vanNvblwiLFxuICB9LFxufSk7XG5cbi8vTWFrZSBHRVQgcmVxdWVzdHMgdG8gcmV0cmlldmUgZGF0YSB1cG9uIHBhZ2UgbG9hZFxuYXBpXG4gIC5nZXRBcHBEYXRhKClcbiAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAvL2RhdGEgaXMgYW4gYXJyYXkgd2l0aCB0d28gZWxlbWVudHMgdGhhdCBjb21lcyBmcm9tcyBhIFByb21pc2UuYWxsIGNhbGwgdGhhdFxuICAgIC8vIGxvYWRzIHRoZSBpbml0aWFsIGRhdGEgZnJvbSB0aGUgc2VydmVyLiBUaGUgZmlyc3QgZWxlbWVudCBpcyBhbiBhcnJheSBvZiBjYXJkc1xuICAgIC8vYW5kIHRoZSBzZWNvbmQgZWxlbWVudCBpcyB0aGUgdXNlckluZm8uXG4gICAgY29uc3QgW2NhcmREYXRhLCB1c2VyRGF0YV0gPSBkYXRhO1xuICAgIGNhcmREYXRhLmZvckVhY2goKGl0ZW0pID0+IHtcbiAgICAgIGNvbnN0IGNhcmQgPSBnZXRDYXJkRWxlbWVudChpdGVtKTtcbiAgICAgIGNhcmRzTGlzdC5hcHBlbmQoY2FyZCk7XG4gICAgfSk7XG5cbiAgICBwcm9maWxlQXZhdGFyLnNyYyA9IHVzZXJEYXRhLmF2YXRhcjtcbiAgICBwcm9maWxlTmFtZS50ZXh0Q29udGVudCA9IHVzZXJEYXRhLm5hbWU7XG4gICAgcHJvZmlsZURlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gdXNlckRhdGEuYWJvdXQ7XG4gIH0pXG4gIC5jYXRjaCgoZXJyb3IpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcblxuZW5hYmxlVmFsaWRhdGlvbihzZXR0aW5ncyk7XG5cbi8vIEdlbmVyYWwgcHVycG9zZSBvcGVuIGFuZCBjbG9zZSBtb2RhbCBsb2dpYyB3LyBFc2NhcGUga2V5IGNsb3NlXG5mdW5jdGlvbiBvcGVuTW9kYWwobW9kYWwpIHtcbiAgbW9kYWwuY2xhc3NMaXN0LmFkZChcIm1vZGFsX2lzLW9wZW5lZFwiKTtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlS2V5RG93bik7XG59XG5mdW5jdGlvbiBjbG9zZU1vZGFsKG1vZGFsKSB7XG4gIG1vZGFsLmNsYXNzTGlzdC5yZW1vdmUoXCJtb2RhbF9pcy1vcGVuZWRcIik7XG4gIC8vUmVtb3ZlZCBrZXlkb3duIGV2ZW50IGxpc3RlbmVyIGZvciBwZXJmb3JtYW5jZSByZWFzb25zXG4gIGRvY3VtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoXCJrZXlkb3duXCIsIGhhbmRsZUtleURvd24pO1xufVxuLy8gY2xpY2sgdG8gY2xvc2UgbG9naWNcbmNvbnN0IGhhbmRsZUNsaWNrVG9DbG9zZSA9IChtb2RhbCkgPT4ge1xuICBtb2RhbC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcbiAgICBpZiAoIWUudGFyZ2V0LmNsb3Nlc3QoXCIubW9kYWxfX2NvbnRhaW5lclwiKSkge1xuICAgICAgY2xvc2VNb2RhbChtb2RhbCk7XG4gICAgfVxuICB9KTtcbn07XG4vL0hhbmRsZSBrZXlkb3duIGV2ZW50IEVzY2FwZSBjbG9zZVxuZnVuY3Rpb24gaGFuZGxlS2V5RG93bihlKSB7XG4gIG1vZGFsTGlzdC5mb3JFYWNoKChtb2RhbCkgPT4ge1xuICAgIGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgY2xvc2VNb2RhbChtb2RhbCk7XG4gICAgfVxuICB9KTtcbn1cbi8vaGFuZGxlIGNsaWNrIHRvIGNsb3NlIGV2ZW50c1xuY29uc3QgbW9kYWxMaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5tb2RhbFwiKTtcbm1vZGFsTGlzdC5mb3JFYWNoKChtb2RhbCkgPT4gaGFuZGxlQ2xpY2tUb0Nsb3NlKG1vZGFsKSk7XG5cbi8vIE5ldyBwb3N0IG9wZW4gZXZlbnQgbGlzdGVuZXJcbm5ld1Bvc3RPcGVuQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIGhhbmRsZVN1Ym1pdEJ0blVJKG5ld1Bvc3RTdWJtaXRCdG4pO1xuICBvcGVuTW9kYWwobmV3UG9zdE1vZGFsKTtcbn0pO1xuLy8gRWRpdCBQcm9maWxlIG9wZW4gZXZlbnQgbGlzdGVuZXJcbmVkaXRNb2RhbE9wZW5CdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcbiAgaGFuZGxlU3VibWl0QnRuVUkoZWRpdFByb2ZpbGVTdWJtaXRCdG4pO1xuICBvcGVuTW9kYWwoZWRpdFByb2ZpbGVNb2RhbCk7XG4gIHJlc2V0VmFsaWRhdGlvbihlZGl0UHJvZmlsZUZvcm0sIFtuYW1lSW5wdXQsIGRlc2NyaXB0aW9uSW5wdXRdLCBzZXR0aW5ncyk7XG4gIGZpbGxFZGl0UHJvZmlsZUZvcm0oKTtcbn0pO1xuXG4vLyBOZXcgcG9zdCBzdWJtaXNzb24gaGFuZGxlclxuZnVuY3Rpb24gaGFuZGxlQWRkQ2FyZFN1Ym1pdChldnQpIHtcbiAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gIGNvbnN0IGlucHV0RGF0YSA9IHtcbiAgICBuYW1lOiBjYXB0aW9uSW5wdXQudmFsdWUsXG4gICAgbGluazogbGlua0lucHV0LnZhbHVlLFxuICB9O1xuICBhcGlcbiAgICAuYWRkTmV3Q2FyZChpbnB1dERhdGEpXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgIGhhbmRsZVN1Ym1pdEJ0blVJKG5ld1Bvc3RTdWJtaXRCdG4pO1xuICAgICAgY29uc3QgY2FyZCA9IGdldENhcmRFbGVtZW50KGRhdGEpO1xuICAgICAgY2FyZHNMaXN0LnByZXBlbmQoY2FyZCk7XG4gICAgICBuZXdQb3N0Rm9ybS5yZXNldCgpO1xuICAgICAgY2xvc2VNb2RhbChuZXdQb3N0TW9kYWwpO1xuICAgICAgZGlzYWJsZVN1Ym1pdEJ1dHRvbihuZXdQb3N0U3VibWl0QnRuLCBzZXR0aW5ncyk7XG4gICAgfSlcbiAgICAvLyBmaWd1cmUgb3V0IGhvdyB0byBtYWtlIGFuIGVycm9yIG1lc3NhZ2UgYXBwZWFyIGluIHRoZSBmb3JtXG4gICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5lcnJvcihlcnJvcikpO1xufVxuXG4vLyBOZXcgcG9zdCBzdWJtaXQgbGlzdGVuZXJcbm5ld1Bvc3RGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgaGFuZGxlQWRkQ2FyZFN1Ym1pdCk7XG5cbi8vIFNldHMgZGVmYXVsdCB2YWx1ZXMgd2hlbiB0aGUgZWRpdCBtb2RhbCBmb3JtIGlzIG9wZW5lZC5cbmZ1bmN0aW9uIGZpbGxFZGl0UHJvZmlsZUZvcm0oKSB7XG4gIC8vIFVzZXMgdGhlIGN1cnJlbnQgRE9NIHZhbHVlcyBhcyB0aGUgZGVmYXVsdCBpbnB1dCB2YWx1ZXMuXG4gIG5hbWVJbnB1dC52YWx1ZSA9IHByb2ZpbGVOYW1lLnRleHRDb250ZW50O1xuICBkZXNjcmlwdGlvbklucHV0LnZhbHVlID0gcHJvZmlsZURlc2NyaXB0aW9uLnRleHRDb250ZW50O1xufVxuXG4vLyBFZGl0IFByb2ZpbGUgc3VibWlzc2lvbiBoYW5kbGVyXG5mdW5jdGlvbiBoYW5kbGVFZGl0UHJvZmlsZUZvcm1TdWJtaXQoZSkge1xuICAvLyBQcmV2ZW50cyB0aGUgcGFnZSBmcm9tIHJlZnJlc2hpbmcgd2hlbiB0aGUgc3VibWl0IGJ1dHRvbiBpcyBjbGlja2VkXG4gIGUucHJldmVudERlZmF1bHQoKTtcbiAgY29uc3QgaW5wdXREYXRhID0ge1xuICAgIG5hbWU6IG5hbWVJbnB1dC52YWx1ZSxcbiAgICBhYm91dDogZGVzY3JpcHRpb25JbnB1dC52YWx1ZSxcbiAgfTtcbiAgYXBpXG4gICAgLmVkaXRVc2VySW5mbyhpbnB1dERhdGEpXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgIGhhbmRsZVN1Ym1pdEJ0blVJKGVkaXRQcm9maWxlU3VibWl0QnRuKTtcbiAgICAgIC8vSWYgdGhlIHByb21pc2UgcmVzb2x2ZXMsIHRoZSBET00gdXBkYXRlcyB3aXRoIHRoZSBuZXcgVmFsdWVzIHNhdmVkIHRvIHRoZSBzZXJ2ZXJcbiAgICAgIHByb2ZpbGVOYW1lLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuICAgICAgcHJvZmlsZURlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gZGF0YS5hYm91dDtcbiAgICAgIGNsb3NlTW9kYWwoZWRpdFByb2ZpbGVNb2RhbCk7XG4gICAgICBkaXNhYmxlU3VibWl0QnV0dG9uKGVkaXRQcm9maWxlU3VibWl0QnRuLCBzZXR0aW5ncyk7XG4gICAgfSlcbiAgICAvL01ha2UgYSB2aXNpYmxlIFVYIHJlc3BvbnNlIGxhdGVyXG4gICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5lcnJvcihlcnJvcikpO1xufVxuXG4vLyBFZGl0IFByb2ZpbGUgc3VibWl0IGxpc3RlbmVyXG5lZGl0UHJvZmlsZUZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBoYW5kbGVFZGl0UHJvZmlsZUZvcm1TdWJtaXQpO1xuXG4vL0Nsb3NlIGJ1dHRvbiBsaXN0ZW5lcnNcbmVkaXRNb2RhbENsb3NlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBjbG9zZU1vZGFsKGVkaXRQcm9maWxlTW9kYWwpKTtcbm5ld1Bvc3RDbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gY2xvc2VNb2RhbChuZXdQb3N0TW9kYWwpKTtcbnByZXZpZXdDbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gY2xvc2VNb2RhbChwcmV2aWV3TW9kYWwpKTtcbmRlbGV0ZUNhcmRNb2RhbENsb3NlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PlxuICBjbG9zZU1vZGFsKGRlbGV0ZUNhcmRNb2RhbClcbik7XG5jYW5jZWxCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IGNsb3NlTW9kYWwoZGVsZXRlQ2FyZE1vZGFsKSk7XG5lZGl0QXZhdGFyQ2xvc2VCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IGNsb3NlTW9kYWwoZWRpdEF2YXRhck1vZGFsKSk7XG5cbi8vRGVsZXRlIGNhcmQgaGFuZGxlclxubGV0IHNlbGVjdGVkQ2FyZDtcbmxldCBzZWxlY3RlZENhcmRJZDtcbmZ1bmN0aW9uIGhhbmRsZURlbGV0ZUNhcmQoY2FyZEVMZW1lbnQsIGRhdGEpIHtcbiAgc2VsZWN0ZWRDYXJkID0gY2FyZEVMZW1lbnQ7XG4gIHNlbGVjdGVkQ2FyZElkID0gZGF0YS5faWQ7XG4gIGRlbGV0ZVN1Ym1pdEJ0bi50ZXh0Q29udGVudCA9IFwiRGVsZXRlXCI7XG4gIG9wZW5Nb2RhbChkZWxldGVDYXJkTW9kYWwpO1xufVxuZnVuY3Rpb24gaGFuZGxlRGVsZXRlQ2FyZFN1Ym1pdChzZWxlY3RlZENhcmQsIHNlbGVjdGVkQ2FyZElkKSB7XG4gIGFwaVxuICAgIC5yZW1vdmVDYXJkKHNlbGVjdGVkQ2FyZElkKVxuICAgIC50aGVuKCgpID0+IHtcbiAgICAgIGRlbGV0ZVN1Ym1pdEJ0bi50ZXh0Q29udGVudCA9IFwiRGVsZXRpbmdcIjtcbiAgICAgIHNlbGVjdGVkQ2FyZC5yZW1vdmUoKTtcbiAgICAgIGNsb3NlTW9kYWwoZGVsZXRlQ2FyZE1vZGFsKTtcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyb3IpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcbn1cbmNhcmREZWxldGVGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICBoYW5kbGVEZWxldGVDYXJkU3VibWl0KHNlbGVjdGVkQ2FyZCwgc2VsZWN0ZWRDYXJkSWQpO1xufSk7XG5cbmZ1bmN0aW9uIGhhbmRsZVN1Ym1pdEJ0blVJKGJ0bikge1xuICBpZiAoYnRuLmRpc2FibGVkID09PSB0cnVlKSB7XG4gICAgYnRuLnRleHRDb250ZW50ID0gXCJTYXZlXCI7XG4gIH0gZWxzZSB7XG4gICAgYnRuLnRleHRDb250ZW50ID0gXCJTYXZpbmdcIjtcbiAgfVxufVxuXG4vL2VkaXQgYXZhdGFyXG5lZGl0QXZhdGFyT3BlbkJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKGUpID0+IHtcbiAgaGFuZGxlU3VibWl0QnRuVUkoZWRpdEF2YXRhclN1Ym1pdEJ0bik7XG4gIG9wZW5Nb2RhbChlZGl0QXZhdGFyTW9kYWwpO1xufSk7XG5cbmZ1bmN0aW9uIGhhbmRsZU5ld0F2YXRhclN1Ym1pdCgpIHtcbiAgYXBpXG4gICAgLmVkaXRBdmF0YXIoYXZhdGFySW5wdXQudmFsdWUpXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgIGhhbmRsZVN1Ym1pdEJ0blVJKGVkaXRBdmF0YXJTdWJtaXRCdG4pO1xuICAgICAgcHJvZmlsZUF2YXRhci5zcmMgPSBkYXRhLmF2YXRhcjtcbiAgICAgIGNsb3NlTW9kYWwoZWRpdEF2YXRhck1vZGFsKTtcbiAgICAgIGRpc2FibGVTdWJtaXRCdXR0b24oZWRpdEF2YXRhclN1Ym1pdEJ0biwgc2V0dGluZ3MpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5lcnJvcihlcnJvcikpO1xufVxuXG5uZXdBdmF0YXJGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICBoYW5kbGVOZXdBdmF0YXJTdWJtaXQoKTtcbn0pO1xuXG5jb25zdCBoYW5kbGVDYXJkTGlrZXMgPSAoaXNMaWtlZCwgY2FyZExpa2VCdG4pID0+IHtcbiAgaXNMaWtlZFxuICAgID8gY2FyZExpa2VCdG4uY2xhc3NMaXN0LmFkZChcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKVxuICAgIDogY2FyZExpa2VCdG4uY2xhc3NMaXN0LnJlbW92ZShcImNhcmRfX2xpa2UtYnV0dG9uX2FjdGl2ZVwiKTtcbn07XG5cbi8vIENyZWF0ZXMgY2FyZHNcbmZ1bmN0aW9uIGdldENhcmRFbGVtZW50KGRhdGEpIHtcbiAgLy8gQ2xvbmVzIHRoZSB0ZW1wbGF0ZSBlbGVtZW50IGFuZCBhbGwgaXQncyBjaGlsZHJlbiBmcm9tIHRoZSBodG1sIHRvIGFuIGVkaXRhYmxlXG4gIC8vICBhbmQgcmV1c2FibGUgZG9tIG9iamVjdCBhbmQgc3RvcmVzIGl0IGluIGEgdmFyaWFibGUgY2FsbGVkIGNhcmRFbGVtZW50IHRoZW5cbiAgLy8gc2VsZWN0cyB0aGUgY2hpbGRyZW4gZWxlbWVudHMgYW5kIGluamVjdHMgdGhlbSB3aXRoIGRhdGEgZnJvbSBwcm9wZXJ0aWVzIG9mXG4gIC8vIHRoZSBvYmplY3RzIGluc2lkZSB0aGUgYXJyYXkgaW5pdGlhbENhcmRzLlxuICBjb25zdCBjYXJkRWxlbWVudCA9IGRvY3VtZW50XG4gICAgLnF1ZXJ5U2VsZWN0b3IoXCIjY2FyZC10ZW1wbGF0ZVwiKVxuICAgIC5jb250ZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZFwiKVxuICAgIC5jbG9uZU5vZGUodHJ1ZSk7XG5cbiAgY29uc3QgY2FyZFRpdGxlID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX190aXRsZVwiKTtcbiAgY2FyZFRpdGxlLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuICBjb25zdCBjYXJkSW1hZ2UgPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2ltYWdlXCIpO1xuICBjYXJkSW1hZ2Uuc3JjID0gZGF0YS5saW5rO1xuICBjYXJkSW1hZ2UuYWx0ID0gZGF0YS5uYW1lO1xuXG4gIC8vIE1ha2VzIHN1cmUgZXZlcnkgY2FyZCB0aGF0cyBjcmVhdGVkIGhhcyBsaWtlIGJ1dHRvbiBhbmQgZGVsZXRlIGJ1dHRvbiBmdW5jdGlvbmFsaXR5XG4gIGNvbnN0IGNhcmRMaWtlQnRuID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19saWtlLWJ1dHRvblwiKTtcblxuICAvLyEhU2V0IHRoZSBpbml0YWwgdmlzdWFsIHN0YXRlIG9mIHRoZSBidXR0b25zIHVwb24gbG9hZGluZyBvciB0aGUgVUkgd29uJ3Qgc2F2ZVxuICBoYW5kbGVDYXJkTGlrZXMoZGF0YS5pc0xpa2VkLCBjYXJkTGlrZUJ0bik7XG5cbiAgY2FyZExpa2VCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICBpZiAoY2FyZExpa2VCdG4uY2xhc3NMaXN0LmNvbnRhaW5zKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpKSB7XG4gICAgICBhcGlcbiAgICAgICAgLnJlbW92ZUxpa2UoZGF0YS5faWQpXG4gICAgICAgIC8vVXNlIHRoZSByZXR1cm5lZCBkYXRhIHRvIHVwZGF0ZSB0aGUgVUlcbiAgICAgICAgLnRoZW4oKHVwZGF0ZWQpID0+IHtcbiAgICAgICAgICBoYW5kbGVDYXJkTGlrZXModXBkYXRlZC5pc0xpa2VkLCBjYXJkTGlrZUJ0bik7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaCgoZXJyb3IpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpXG4gICAgICAgIC5hZGRMaWtlKGRhdGEuX2lkKVxuICAgICAgICAudGhlbigodXBkYXRlZCkgPT4ge1xuICAgICAgICAgIGhhbmRsZUNhcmRMaWtlcyh1cGRhdGVkLmlzTGlrZWQsIGNhcmRMaWtlQnRuKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5lcnJvcihlcnJvcikpO1xuICAgIH1cbiAgfSk7XG5cbiAgY29uc3QgY2FyZERlbGV0ZUJ0biA9IGNhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9fZGVsZXRlLWJ1dHRvblwiKTtcbiAgY2FyZERlbGV0ZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGhhbmRsZURlbGV0ZUNhcmQoY2FyZEVsZW1lbnQsIGRhdGEpO1xuICB9KTtcblxuICBjYXJkRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgZnVuY3Rpb24gKGV2dCkge1xuICAgIGlmIChldnQudGFyZ2V0ID09PSBjYXJkSW1hZ2UpIHtcbiAgICAgIG9wZW5Nb2RhbChwcmV2aWV3TW9kYWwpO1xuICAgICAgcHJldmlld0ltYWdlLnNyYyA9IGRhdGEubGluaztcbiAgICAgIHByZXZpZXdJbWFnZS5hbHQgPSBkYXRhLm5hbWU7XG4gICAgICBwcmV2aWV3Q2FwdGlvbi50ZXh0Q29udGVudCA9IGRhdGEubmFtZTtcbiAgICB9XG4gIH0pO1xuXG4gIHJldHVybiBjYXJkRWxlbWVudDtcbn1cbi8vIEVuZCBvZiBnZXRDYXJkRWxlbWVudCBmdW5jdGlvblxuXG5leHBvcnQge1xuICBlZGl0TW9kYWxPcGVuQnRuLFxuICBlZGl0UHJvZmlsZU1vZGFsLFxuICBlZGl0TW9kYWxDbG9zZUJ0bixcbiAgZWRpdFByb2ZpbGVTdWJtaXRCdG4sXG4gIG5ld1Bvc3RNb2RhbCxcbiAgbmV3UG9zdE9wZW5CdG4sXG4gIG5ld1Bvc3RDbG9zZUJ0bixcbiAgbmV3UG9zdFN1Ym1pdEJ0bixcbiAgcHJvZmlsZU5hbWUsXG4gIGRlc2NyaXB0aW9uSW5wdXQsXG4gIG5hbWVJbnB1dCxcbiAgbGlua0lucHV0LFxuICBjYXB0aW9uSW5wdXQsXG4gIGVkaXRQcm9maWxlRm9ybSxcbiAgbmV3UG9zdEZvcm0sXG4gIHByZXZpZXdNb2RhbCxcbiAgcHJldmlld0Nsb3NlQnRuLFxuICBwcmV2aWV3Q2FwdGlvbixcbiAgcHJldmlld0ltYWdlLFxuICBvcGVuTW9kYWwsXG4gIGNsb3NlTW9kYWwsXG4gIGhhbmRsZUNsaWNrVG9DbG9zZSxcbiAgaGFuZGxlS2V5RG93bixcbiAgbW9kYWxMaXN0LFxuICBoYW5kbGVBZGRDYXJkU3VibWl0LFxuICBmaWxsRWRpdFByb2ZpbGVGb3JtLFxuICBoYW5kbGVFZGl0UHJvZmlsZUZvcm1TdWJtaXQsXG4gIGdldENhcmRFbGVtZW50LFxuICBjYXJkc0xpc3QsXG59O1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQVBJIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHRoaXMuX2Jhc2VVcmwgPSBvcHRpb25zLmJhc2VVcmw7XG4gICAgdGhpcy5faGVhZGVycyA9IG9wdGlvbnMuaGVhZGVycztcbiAgfVxuICAvL0RSWVxuICBfaGFuZGxlUmVzcG9uc2UocmVzKSB7XG4gICAgcmV0dXJuIHJlcy5vayA/IHJlcy5qc29uKCkgOiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgfVxuXG4gIF9nZXRJbml0aWFsQ2FyZHMoKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuX2hhbmRsZVJlc3BvbnNlKTtcbiAgfVxuXG4gIF9nZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlUmVzcG9uc2UpO1xuICB9XG5cbiAgZ2V0QXBwRGF0YSgpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwoW3RoaXMuX2dldEluaXRpYWxDYXJkcygpLCB0aGlzLl9nZXRVc2VySW5mbygpXSk7XG4gIH1cblxuICBlZGl0VXNlckluZm8oeyBuYW1lLCBhYm91dCB9KSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lLFxuICAgICAgICBhYm91dCxcbiAgICAgIH0pLFxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlUmVzcG9uc2UpO1xuICB9XG5cbiAgYWRkTmV3Q2FyZCh7IG5hbWUsIGxpbmsgfSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lLFxuICAgICAgICBsaW5rLFxuICAgICAgfSksXG4gICAgfSkudGhlbih0aGlzLl9oYW5kbGVSZXNwb25zZSk7XG4gIH1cblxuICByZW1vdmVDYXJkKGlkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7aWR9YCwge1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuX2hhbmRsZVJlc3BvbnNlKTtcbiAgfVxuXG4gIHJlbW92ZUxpa2UoaWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtpZH0vbGlrZXNgLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlUmVzcG9uc2UpO1xuICB9XG5cbiAgYWRkTGlrZShpZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2lkfS9saWtlc2AsIHtcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLl9oYW5kbGVSZXNwb25zZSk7XG4gIH1cblxuICBlZGl0QXZhdGFyKGF2YXRhcikge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGF2YXRhcixcbiAgICAgIH0pLFxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlUmVzcG9uc2UpO1xuICB9XG59XG4iXSwibmFtZXMiOlsic2V0dGluZ3MiLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImhpZGVJbnB1dEVycm9yIiwiZm9ybUVsIiwiaW5wdXRFbCIsImNvbmZpZyIsImlucHV0RXJyb3IiLCJxdWVyeVNlbGVjdG9yIiwiaWQiLCJ0ZXh0Q29udGVudCIsImNsYXNzTGlzdCIsInJlbW92ZSIsImRpc2FibGVTdWJtaXRCdXR0b24iLCJidXR0b25FbCIsImFkZCIsImRpc2FibGVkIiwidG9nZ2xlU3VibWl0QnV0dG9uIiwiaW5wdXRzIiwic29tZSIsImlucHV0IiwidmFsaWRpdHkiLCJ2YWxpZCIsImhhc0ludmFsaWRJbnB1dCIsImVuYWJsZVZhbGlkYXRpb24iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJpbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJzdWJtaXRCdG4iLCJhZGRFdmVudExpc3RlbmVyIiwiY2hlY2tJbnB1dFZhbGlkaXR5Iiwic2hvd0lucHV0RXJyb3IiLCJlcnJvck1zZyIsInZhbGlkYXRpb25NZXNzYWdlIiwiZWRpdE1vZGFsT3BlbkJ0biIsImVkaXRQcm9maWxlTW9kYWwiLCJlZGl0TW9kYWxDbG9zZUJ0biIsImVkaXRQcm9maWxlU3VibWl0QnRuIiwiY2FyZHNMaXN0IiwibmV3UG9zdE1vZGFsIiwibmV3UG9zdE9wZW5CdG4iLCJuZXdQb3N0Q2xvc2VCdG4iLCJuZXdQb3N0U3VibWl0QnRuIiwiZWRpdEF2YXRhck9wZW5CdG4iLCJlZGl0QXZhdGFyTW9kYWwiLCJlZGl0QXZhdGFyQ2xvc2VCdG4iLCJhdmF0YXJJbnB1dCIsImVkaXRBdmF0YXJTdWJtaXRCdG4iLCJwcm9maWxlQXZhdGFyIiwiZ2V0RWxlbWVudEJ5SWQiLCJwcm9maWxlTmFtZSIsIm5hbWVJbnB1dCIsInByb2ZpbGVEZXNjcmlwdGlvbiIsImRlc2NyaXB0aW9uSW5wdXQiLCJsaW5rSW5wdXQiLCJjYXB0aW9uSW5wdXQiLCJlZGl0UHJvZmlsZUZvcm0iLCJmb3JtcyIsIm5ld1Bvc3RGb3JtIiwiY2FyZERlbGV0ZUZvcm0iLCJuZXdBdmF0YXJGb3JtIiwicHJldmlld01vZGFsIiwicHJldmlld0Nsb3NlQnRuIiwicHJldmlld0ltYWdlIiwicHJldmlld0NhcHRpb24iLCJkZWxldGVDYXJkTW9kYWwiLCJkZWxldGVDYXJkTW9kYWxDbG9zZUJ0biIsImNhbmNlbEJ0biIsImRlbGV0ZVN1Ym1pdEJ0biIsImFwaSIsImNvbnN0cnVjdG9yIiwib3B0aW9ucyIsInRoaXMiLCJfYmFzZVVybCIsImJhc2VVcmwiLCJfaGVhZGVycyIsImhlYWRlcnMiLCJfaGFuZGxlUmVzcG9uc2UiLCJyZXMiLCJvayIsImpzb24iLCJQcm9taXNlIiwicmVqZWN0Iiwic3RhdHVzIiwiX2dldEluaXRpYWxDYXJkcyIsImZldGNoIiwidGhlbiIsIl9nZXRVc2VySW5mbyIsImdldEFwcERhdGEiLCJhbGwiLCJlZGl0VXNlckluZm8iLCJuYW1lIiwiYWJvdXQiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImFkZE5ld0NhcmQiLCJsaW5rIiwicmVtb3ZlQ2FyZCIsInJlbW92ZUxpa2UiLCJhZGRMaWtlIiwiZWRpdEF2YXRhciIsImF2YXRhciIsImF1dGhvcml6YXRpb24iLCJvcGVuTW9kYWwiLCJtb2RhbCIsImhhbmRsZUtleURvd24iLCJjbG9zZU1vZGFsIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImUiLCJtb2RhbExpc3QiLCJrZXkiLCJkYXRhIiwiY2FyZERhdGEiLCJ1c2VyRGF0YSIsIml0ZW0iLCJjYXJkIiwiZ2V0Q2FyZEVsZW1lbnQiLCJhcHBlbmQiLCJzcmMiLCJjYXRjaCIsImVycm9yIiwiY29uc29sZSIsInNlbGVjdGVkQ2FyZCIsInNlbGVjdGVkQ2FyZElkIiwiaGFuZGxlU3VibWl0QnRuVUkiLCJidG4iLCJ0YXJnZXQiLCJjbG9zZXN0IiwiaGFuZGxlQ2xpY2tUb0Nsb3NlIiwicmVzZXRWYWxpZGF0aW9uIiwidmFsdWUiLCJldnQiLCJwcmV2ZW50RGVmYXVsdCIsImlucHV0RGF0YSIsInByZXBlbmQiLCJyZXNldCIsImhhbmRsZURlbGV0ZUNhcmRTdWJtaXQiLCJoYW5kbGVDYXJkTGlrZXMiLCJpc0xpa2VkIiwiY2FyZExpa2VCdG4iLCJjYXJkRWxlbWVudCIsImNvbnRlbnQiLCJjbG9uZU5vZGUiLCJjYXJkSW1hZ2UiLCJhbHQiLCJjb250YWlucyIsIl9pZCIsInVwZGF0ZWQiLCJjYXJkRUxlbWVudCIsImhhbmRsZURlbGV0ZUNhcmQiXSwic291cmNlUm9vdCI6IiJ9