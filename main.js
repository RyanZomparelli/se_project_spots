/*! For license information please see main.js.LICENSE.txt */
!function(){"use strict";const e={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__button-submit",inactiveButtonClass:"modal__button-submit_disabled",inputErrorClass:"modal__input_type_error",errorClass:"modal__input-error_active"},t=(e,t,r)=>{const n=e.querySelector(`.${t.id}-error`);n.textContent="",n.classList.remove(r.errorClass),t.classList.remove(r.inputErrorClass)},r=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.disabled=!0},n=(e,t,n)=>{(e=>e.some(e=>!e.validity.valid))(e)?r(t,n):(t.classList.remove(n.inactiveButtonClass),t.disabled=!1)},o=e=>{document.querySelectorAll(e.formSelector).forEach(r=>{((e,r)=>{const o=Array.from(e.querySelectorAll(r.inputSelector)),a=e.querySelector(r.submitButtonSelector);n(o,a,r),o.forEach(s=>{s.addEventListener("input",()=>{((e,r,n)=>{r.validity.valid?t(e,r,n):((e,t,r,n)=>{const o=e.querySelector(`.${t.id}-error`);o.textContent=r,o.classList.add(n.errorClass),t.classList.add(n.inputErrorClass)})(e,r,r.validationMessage,n)})(e,s,r),n(o,a,r)})})})(r,e)})};o(e);const a=document.forms["edit-profile"],s=document.forms["new-post"],c=document.forms["delete-card"],i=document.forms["new-avatar"],d=document.querySelector("#edit-profile-modal"),l=document.querySelector(".profile__edit-button"),u=d.querySelector(".modal__button-close"),m=d.querySelector(".modal__button-submit"),_=d.querySelector("#name-input"),h=d.querySelector("#description-input"),v=document.querySelector(".profile__name"),p=document.querySelector(".profile__description"),y=document.querySelector("#new-post-modal"),b=document.querySelector(".profile__button-add"),f=y.querySelector(".modal__button-close"),S=y.querySelector(".modal__button-submit"),q=y.querySelector("#image-input"),L=y.querySelector("#caption-input"),E=document.querySelector("#preview-modal"),k=E.querySelector(".modal__button-close"),C=E.querySelector(".modal__img"),g=E.querySelector(".modal__caption"),U=document.querySelector("#avatar-modal"),x=document.querySelector(".profile__avatar-button"),$=U.querySelector(".modal__button-close"),A=U.querySelector(".modal__button-submit"),D=document.getElementById("profile-avatar"),w=U.querySelector("#image-input"),R=document.querySelector("#delete-card-modal"),I=R.querySelector(".modal__button-close"),B=R.querySelector("#cancel"),N=R.querySelector(".modal__button-submit"),P=document.querySelector(".cards__list");function T(e){e.classList.add("modal_is-opened"),document.addEventListener("keydown",j)}function O(e){e.classList.remove("modal_is-opened"),document.removeEventListener("keydown",j)}function j(e){F.forEach(t=>{"Escape"===e.key&&O(t)})}const J=(e,t)=>{e?t.classList.add("card__like-button_active"):t.classList.remove("card__like-button_active")};function H(e){!0===e.disabled?e.textContent="Save":e.textContent="Saving"}function z(e){const t=document.querySelector("#card-template").content.querySelector(".card").cloneNode(!0);t.querySelector(".card__title").textContent=e.name;const r=t.querySelector(".card__image");r.src=e.link,r.alt=e.name;const n=t.querySelector(".card__like-button");return J(e.isLiked,n),n.addEventListener("click",()=>{n.classList.contains("card__like-button_active")?M.removeLike(e._id).then(e=>{J(e.isLiked,n)}).catch(e=>console.error(e)):M.addLike(e._id).then(e=>{J(e.isLiked,n)}).catch(e=>console.error(e))}),t.querySelector(".card__delete-button").addEventListener("click",()=>{!function(e,t){G=e,K=t._id,N.textContent="Delete",T(R)}(t,e)}),t.addEventListener("click",function(t){t.target===r&&(T(E),C.src=e.link,C.alt=e.name,g.textContent=e.name)}),t}const M=new class{constructor(e){this._baseUrl=e.baseUrl,this._headers=e.headers}_handleResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_getInitialCards(){return fetch(`${this._baseUrl}/cards`,{headers:this._headers}).then(this._handleResponse)}_getUserInfo(){return fetch(`${this._baseUrl}/users/me`,{headers:this._headers}).then(this._handleResponse)}getAppData(){return Promise.all([this._getInitialCards(),this._getUserInfo()])}editUserInfo({name:e,about:t}){return fetch(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:e,about:t})}).then(this._handleResponse)}addNewCard({name:e,link:t}){return fetch(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:e,link:t})}).then(this._handleResponse)}removeCard(e){return fetch(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}removeLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"DELETE",headers:this._headers}).then(this._handleResponse)}addLike(e){return fetch(`${this._baseUrl}/cards/${e}/likes`,{method:"PUT",headers:this._headers}).then(this._handleResponse)}editAvatar(e){return fetch(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})}).then(this._handleResponse)}}({baseUrl:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"640264a7-d833-4076-a643-c71cc77da761","content-type":"application/json"}});M.getAppData().then(e=>{const[t,r]=e;t.forEach(e=>{const t=z(e);P.append(t)}),D.src=r.avatar,v.textContent=r.name,p.textContent=r.about}).catch(e=>console.error(e)),o(e),x.addEventListener("click",e=>{H(A),T(U)}),l.addEventListener("click",function(){var r,n;H(m),T(d),r=a,n=e,[_,h].forEach(e=>{t(r,e,n)}),_.value=v.textContent,h.value=p.textContent}),b.addEventListener("click",()=>{H(S),T(y)}),u.addEventListener("click",()=>O(d)),f.addEventListener("click",()=>O(y)),k.addEventListener("click",()=>O(E)),I.addEventListener("click",()=>O(R)),B.addEventListener("click",()=>O(R)),$.addEventListener("click",()=>O(U));const F=document.querySelectorAll(".modal");let G,K;F.forEach(e=>(e=>{e.addEventListener("click",t=>{t.target.closest(".modal__container")||O(e)})})(e)),s.addEventListener("submit",function(t){t.preventDefault();const n={name:L.value,link:q.value};M.addNewCard(n).then(t=>{H(S);const n=z(t);P.prepend(n),s.reset(),O(y),r(S,e)}).catch(e=>console.error(e))}),a.addEventListener("submit",function(t){t.preventDefault();const n={name:_.value,about:h.value};M.editUserInfo(n).then(t=>{H(m),v.textContent=t.name,p.textContent=t.about,O(d),r(m,e)}).catch(e=>console.error(e))}),c.addEventListener("submit",e=>{e.preventDefault(),function(e,t){M.removeCard(t).then(()=>{N.textContent="Deleting",e.remove(),O(R)}).catch(e=>console.error(e))}(G,K)}),i.addEventListener("submit",t=>{t.preventDefault(),M.editAvatar(w.value).then(t=>{H(A),D.src=t.avatar,O(U),r(A,e)}).catch(e=>console.error(e))})}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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R0FDNUNYLEVBQ0d5QyxXQUFXOUIsR0FDWFIsS0FBSyxLQUNKN0IsRUFBZ0I3RCxZQUFjLFdBQzlCaUcsRUFBYS9GLFNBQ2JnRSxFQUFXUixLQUVaa0MsTUFBT0MsR0FBVUMsUUFBUUQsTUFBTUEsR0FDcEMsQ0EwSUVvRCxDQUF1QmhELEVBQWNDLEtBR3ZDbEUsRUFBY1QsaUJBQWlCLFNBQVc2QyxJQUN4Q0EsRUFBRXlFLGlCQTNJRnRELEVBQ0cwQyxXQUFXeEUsRUFBWWlGLE9BQ3ZCaEQsS0FBTWIsSUFDTEgsRUFBa0JwQixHQUNsQkMsRUFBYzRCLElBQU1OLEVBQUtxRCxPQUN6QmhFLEVBQVdmLEdBQ1hoRCxFQUFvQm1ELEVBQXFCcEUsS0FFMUMwRyxNQUFPQyxHQUFVQyxRQUFRRCxNQUFNQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NlX3Byb2plY3Rfc3BvdHMvLi9zcmMvc2NyaXB0cy92YWxpZGF0aW9uLmpzIiwid2VicGFjazovL3NlX3Byb2plY3Rfc3BvdHMvLi9zcmMvcGFnZXMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vc2VfcHJvamVjdF9zcG90cy8uL3NyYy91dGlscy9BcGkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgc2V0dGluZ3MgPSB7XG4gIGZvcm1TZWxlY3RvcjogXCIubW9kYWxfX2Zvcm1cIixcbiAgaW5wdXRTZWxlY3RvcjogXCIubW9kYWxfX2lucHV0XCIsXG4gIHN1Ym1pdEJ1dHRvblNlbGVjdG9yOiBcIi5tb2RhbF9fYnV0dG9uLXN1Ym1pdFwiLFxuICBpbmFjdGl2ZUJ1dHRvbkNsYXNzOiBcIm1vZGFsX19idXR0b24tc3VibWl0X2Rpc2FibGVkXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJtb2RhbF9faW5wdXRfdHlwZV9lcnJvclwiLFxuICBlcnJvckNsYXNzOiBcIm1vZGFsX19pbnB1dC1lcnJvcl9hY3RpdmVcIixcbn07XG5cbmNvbnN0IHNob3dJbnB1dEVycm9yID0gKGZvcm1FbCwgaW5wdXRFbCwgZXJyb3JNc2csIGNvbmZpZykgPT4ge1xuICBjb25zdCBpbnB1dEVycm9yID0gZm9ybUVsLnF1ZXJ5U2VsZWN0b3IoYC4ke2lucHV0RWwuaWR9LWVycm9yYCk7XG4gIGlucHV0RXJyb3IudGV4dENvbnRlbnQgPSBlcnJvck1zZztcbiAgaW5wdXRFcnJvci5jbGFzc0xpc3QuYWRkKGNvbmZpZy5lcnJvckNsYXNzKTtcbiAgaW5wdXRFbC5jbGFzc0xpc3QuYWRkKGNvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xufTtcblxuY29uc3QgaGlkZUlucHV0RXJyb3IgPSAoZm9ybUVsLCBpbnB1dEVsLCBjb25maWcpID0+IHtcbiAgY29uc3QgaW5wdXRFcnJvciA9IGZvcm1FbC5xdWVyeVNlbGVjdG9yKGAuJHtpbnB1dEVsLmlkfS1lcnJvcmApO1xuICBpbnB1dEVycm9yLnRleHRDb250ZW50ID0gXCJcIjtcbiAgaW5wdXRFcnJvci5jbGFzc0xpc3QucmVtb3ZlKGNvbmZpZy5lcnJvckNsYXNzKTtcbiAgaW5wdXRFbC5jbGFzc0xpc3QucmVtb3ZlKGNvbmZpZy5pbnB1dEVycm9yQ2xhc3MpO1xufTtcblxuY29uc3QgY2hlY2tJbnB1dFZhbGlkaXR5ID0gKGZvcm1FbCwgaW5wdXRFbCwgY29uZmlnKSA9PiB7XG4gIGlmICghaW5wdXRFbC52YWxpZGl0eS52YWxpZCkge1xuICAgIHNob3dJbnB1dEVycm9yKGZvcm1FbCwgaW5wdXRFbCwgaW5wdXRFbC52YWxpZGF0aW9uTWVzc2FnZSwgY29uZmlnKTtcbiAgfSBlbHNlIHtcbiAgICBoaWRlSW5wdXRFcnJvcihmb3JtRWwsIGlucHV0RWwsIGNvbmZpZyk7XG4gIH1cbn07XG5cbi8vVXNlZCB0byByZXNldCB0aGUgZWRpdC1wcm9maWxlIGZvcm0gdmFsaWRhdGlvbiBtZXNzYWdlc1xuY29uc3QgcmVzZXRWYWxpZGF0aW9uID0gKGZvcm1FbCwgaW5wdXRzLCBjb25maWcpID0+IHtcbiAgaW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgaGlkZUlucHV0RXJyb3IoZm9ybUVsLCBpbnB1dCwgY29uZmlnKTtcbiAgfSk7XG59O1xuXG5jb25zdCBoYXNJbnZhbGlkSW5wdXQgPSAoaW5wdXRzKSA9PiB7XG4gIHJldHVybiBpbnB1dHMuc29tZSgoaW5wdXQpID0+IHtcbiAgICByZXR1cm4gIWlucHV0LnZhbGlkaXR5LnZhbGlkO1xuICB9KTtcbn07XG5cbmNvbnN0IGRpc2FibGVTdWJtaXRCdXR0b24gPSAoYnV0dG9uRWwsIGNvbmZpZykgPT4ge1xuICBidXR0b25FbC5jbGFzc0xpc3QuYWRkKGNvbmZpZy5pbmFjdGl2ZUJ1dHRvbkNsYXNzKTtcbiAgYnV0dG9uRWwuZGlzYWJsZWQgPSB0cnVlO1xufTtcblxuY29uc3QgdG9nZ2xlU3VibWl0QnV0dG9uID0gKGlucHV0cywgYnV0dG9uRWwsIGNvbmZpZykgPT4ge1xuICBpZiAoaGFzSW52YWxpZElucHV0KGlucHV0cykpIHtcbiAgICBkaXNhYmxlU3VibWl0QnV0dG9uKGJ1dHRvbkVsLCBjb25maWcpO1xuICB9IGVsc2Uge1xuICAgIGJ1dHRvbkVsLmNsYXNzTGlzdC5yZW1vdmUoY29uZmlnLmluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIGJ1dHRvbkVsLmRpc2FibGVkID0gZmFsc2U7XG4gIH1cbn07XG5cbmNvbnN0IHNldEV2ZW50TGlzdGVuZXJzID0gKGZvcm1FbCwgY29uZmlnKSA9PiB7XG4gIGNvbnN0IGlucHV0TGlzdCA9IEFycmF5LmZyb20oZm9ybUVsLnF1ZXJ5U2VsZWN0b3JBbGwoY29uZmlnLmlucHV0U2VsZWN0b3IpKTtcbiAgY29uc3Qgc3VibWl0QnRuID0gZm9ybUVsLnF1ZXJ5U2VsZWN0b3IoY29uZmlnLnN1Ym1pdEJ1dHRvblNlbGVjdG9yKTtcblxuICB0b2dnbGVTdWJtaXRCdXR0b24oaW5wdXRMaXN0LCBzdWJtaXRCdG4sIGNvbmZpZyk7XG5cbiAgaW5wdXRMaXN0LmZvckVhY2goKGlucHV0RWwpID0+IHtcbiAgICBpbnB1dEVsLmFkZEV2ZW50TGlzdGVuZXIoXCJpbnB1dFwiLCAoKSA9PiB7XG4gICAgICBjaGVja0lucHV0VmFsaWRpdHkoZm9ybUVsLCBpbnB1dEVsLCBjb25maWcpO1xuICAgICAgdG9nZ2xlU3VibWl0QnV0dG9uKGlucHV0TGlzdCwgc3VibWl0QnRuLCBjb25maWcpO1xuICAgIH0pO1xuICB9KTtcbn07XG5cbmNvbnN0IGVuYWJsZVZhbGlkYXRpb24gPSAoY29uZmlnKSA9PiB7XG4gIGNvbnN0IGZvcm1MaXN0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChjb25maWcuZm9ybVNlbGVjdG9yKTtcbiAgZm9ybUxpc3QuZm9yRWFjaCgoZm9ybUVsKSA9PiB7XG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoZm9ybUVsLCBjb25maWcpO1xuICB9KTtcbn07XG5cbmVuYWJsZVZhbGlkYXRpb24oc2V0dGluZ3MpO1xuXG5leHBvcnQgeyBlbmFibGVWYWxpZGF0aW9uLCByZXNldFZhbGlkYXRpb24sIGRpc2FibGVTdWJtaXRCdXR0b24sIHNldHRpbmdzIH07XG4iLCJpbXBvcnQgXCIuL2luZGV4LmNzc1wiO1xuaW1wb3J0IHtcbiAgZW5hYmxlVmFsaWRhdGlvbixcbiAgcmVzZXRWYWxpZGF0aW9uLFxuICBkaXNhYmxlU3VibWl0QnV0dG9uLFxuICBzZXR0aW5ncyxcbn0gZnJvbSBcIi4uL3NjcmlwdHMvdmFsaWRhdGlvbi5qc1wiO1xuXG5pbXBvcnQgQVBJIGZyb20gXCIuLi91dGlscy9BcGkuanNcIjtcblxuLy9WQVJJQUJMRVNcblxuLy8gU2VsZWN0cyBlYWNoIGZvcm1cbmNvbnN0IGVkaXRQcm9maWxlRm9ybSA9IGRvY3VtZW50LmZvcm1zW1wiZWRpdC1wcm9maWxlXCJdO1xuY29uc3QgbmV3UG9zdEZvcm0gPSBkb2N1bWVudC5mb3Jtc1tcIm5ldy1wb3N0XCJdO1xuY29uc3QgY2FyZERlbGV0ZUZvcm0gPSBkb2N1bWVudC5mb3Jtc1tcImRlbGV0ZS1jYXJkXCJdO1xuY29uc3QgbmV3QXZhdGFyRm9ybSA9IGRvY3VtZW50LmZvcm1zW1wibmV3LWF2YXRhclwiXTtcblxuLy8gU2VsZWN0cyBFZGl0IHByb2ZpbGUgbW9kYWwgYW5kIGJ1dHRvbnNcbmNvbnN0IGVkaXRQcm9maWxlTW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI2VkaXQtcHJvZmlsZS1tb2RhbFwiKTtcbmNvbnN0IGVkaXRNb2RhbE9wZW5CdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2VkaXQtYnV0dG9uXCIpO1xuY29uc3QgZWRpdE1vZGFsQ2xvc2VCdG4gPSBlZGl0UHJvZmlsZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLm1vZGFsX19idXR0b24tY2xvc2VcIlxuKTtcbmNvbnN0IGVkaXRQcm9maWxlU3VibWl0QnRuID0gZWRpdFByb2ZpbGVNb2RhbC5xdWVyeVNlbGVjdG9yKFxuICBcIi5tb2RhbF9fYnV0dG9uLXN1Ym1pdFwiXG4pO1xuXG4vL0VkaXRQcm9maWxlRm9ybSBpbnB1dHMgYW5kIGVsZW1lbnRzXG5jb25zdCBuYW1lSW5wdXQgPSBlZGl0UHJvZmlsZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIjbmFtZS1pbnB1dFwiKTtcbmNvbnN0IGRlc2NyaXB0aW9uSW5wdXQgPSBlZGl0UHJvZmlsZU1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIjZGVzY3JpcHRpb24taW5wdXRcIik7XG5jb25zdCBwcm9maWxlTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fbmFtZVwiKTtcbmNvbnN0IHByb2ZpbGVEZXNjcmlwdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fZGVzY3JpcHRpb25cIik7XG5cbi8vIFNlbGVjdHMgTmV3IHBvc3QgbW9kYWwgYW5kIGJ1dHRvbnNcbmNvbnN0IG5ld1Bvc3RNb2RhbCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjbmV3LXBvc3QtbW9kYWxcIik7XG5jb25zdCBuZXdQb3N0T3BlbkJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYnV0dG9uLWFkZFwiKTtcbmNvbnN0IG5ld1Bvc3RDbG9zZUJ0biA9IG5ld1Bvc3RNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19idXR0b24tY2xvc2VcIik7XG5jb25zdCBuZXdQb3N0U3VibWl0QnRuID0gbmV3UG9zdE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2J1dHRvbi1zdWJtaXRcIik7XG5cbi8vIFNlbGVjdHMgbmV3IHBvc3QgaW5wdXRzXG5jb25zdCBsaW5rSW5wdXQgPSBuZXdQb3N0TW9kYWwucXVlcnlTZWxlY3RvcihcIiNpbWFnZS1pbnB1dFwiKTtcbmNvbnN0IGNhcHRpb25JbnB1dCA9IG5ld1Bvc3RNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI2NhcHRpb24taW5wdXRcIik7XG5cbi8vIFNlbGVjdHMgUHJldmlldyBtb2RhbCwgYnV0dG9ucywgYW5kIGVsZW1lbnRzXG5jb25zdCBwcmV2aWV3TW9kYWwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiI3ByZXZpZXctbW9kYWxcIik7XG5jb25zdCBwcmV2aWV3Q2xvc2VCdG4gPSBwcmV2aWV3TW9kYWwucXVlcnlTZWxlY3RvcihcIi5tb2RhbF9fYnV0dG9uLWNsb3NlXCIpO1xuY29uc3QgcHJldmlld0ltYWdlID0gcHJldmlld01vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2ltZ1wiKTtcbmNvbnN0IHByZXZpZXdDYXB0aW9uID0gcHJldmlld01vZGFsLnF1ZXJ5U2VsZWN0b3IoXCIubW9kYWxfX2NhcHRpb25cIik7XG5cbi8vU2VsZWN0cyBlZGl0IGF2YXRhciBtb2RhbCBhbmQgYnV0dG9uc1xuY29uc3QgZWRpdEF2YXRhck1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNhdmF0YXItbW9kYWxcIik7XG5jb25zdCBlZGl0QXZhdGFyT3BlbkJ0biA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYXZhdGFyLWJ1dHRvblwiKTtcbmNvbnN0IGVkaXRBdmF0YXJDbG9zZUJ0biA9IGVkaXRBdmF0YXJNb2RhbC5xdWVyeVNlbGVjdG9yKFxuICBcIi5tb2RhbF9fYnV0dG9uLWNsb3NlXCJcbik7XG5jb25zdCBlZGl0QXZhdGFyU3VibWl0QnRuID0gZWRpdEF2YXRhck1vZGFsLnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLm1vZGFsX19idXR0b24tc3VibWl0XCJcbik7XG5cbi8vU2VsZWN0cyBhdmF0YXIgZWxlbWVudCBhbmQgaW5wdXRcbmNvbnN0IHByb2ZpbGVBdmF0YXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByb2ZpbGUtYXZhdGFyXCIpO1xuY29uc3QgYXZhdGFySW5wdXQgPSBlZGl0QXZhdGFyTW9kYWwucXVlcnlTZWxlY3RvcihcIiNpbWFnZS1pbnB1dFwiKTtcblxuLy9TZWxlY3RzIGRlbGV0ZSBtb2RhbCBhbmQgYnV0dG9uc1xuY29uc3QgZGVsZXRlQ2FyZE1vZGFsID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNkZWxldGUtY2FyZC1tb2RhbFwiKTtcbmNvbnN0IGRlbGV0ZUNhcmRNb2RhbENsb3NlQnRuID0gZGVsZXRlQ2FyZE1vZGFsLnF1ZXJ5U2VsZWN0b3IoXG4gIFwiLm1vZGFsX19idXR0b24tY2xvc2VcIlxuKTtcbmNvbnN0IGNhbmNlbEJ0biA9IGRlbGV0ZUNhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiI2NhbmNlbFwiKTtcbmNvbnN0IGRlbGV0ZVN1Ym1pdEJ0biA9IGRlbGV0ZUNhcmRNb2RhbC5xdWVyeVNlbGVjdG9yKFwiLm1vZGFsX19idXR0b24tc3VibWl0XCIpO1xuXG4vLyBTZWxlY3RzIHRoZSA8dWw+IGVsZW1lbnQgZnJvbSB0aGUgaHRtbCB0byBhY2NlcHQgdGhlIG5ld2x5IGNyZWF0ZWQgY2FyZHNcbmNvbnN0IGNhcmRzTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZHNfX2xpc3RcIik7XG5cbi8vRlVOQ1RJT05TXG5cbi8vIEdlbmVyYWwgcHVycG9zZSBvcGVuIGFuZCBjbG9zZSBtb2RhbCBsb2dpYyB3LyBFc2NhcGUga2V5IGNsb3NlXG5mdW5jdGlvbiBvcGVuTW9kYWwobW9kYWwpIHtcbiAgbW9kYWwuY2xhc3NMaXN0LmFkZChcIm1vZGFsX2lzLW9wZW5lZFwiKTtcbiAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlS2V5RG93bik7XG59XG5cbmZ1bmN0aW9uIGNsb3NlTW9kYWwobW9kYWwpIHtcbiAgbW9kYWwuY2xhc3NMaXN0LnJlbW92ZShcIm1vZGFsX2lzLW9wZW5lZFwiKTtcbiAgLy9SZW1vdmVkIGtleWRvd24gZXZlbnQgbGlzdGVuZXIgZm9yIHBlcmZvcm1hbmNlIHJlYXNvbnNcbiAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleWRvd25cIiwgaGFuZGxlS2V5RG93bik7XG59XG5cbi8vIGNsaWNrIHRvIGNsb3NlIGxvZ2ljXG5jb25zdCBoYW5kbGVDbGlja1RvQ2xvc2UgPSAobW9kYWwpID0+IHtcbiAgbW9kYWwuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChlKSA9PiB7XG4gICAgaWYgKCFlLnRhcmdldC5jbG9zZXN0KFwiLm1vZGFsX19jb250YWluZXJcIikpIHtcbiAgICAgIGNsb3NlTW9kYWwobW9kYWwpO1xuICAgIH1cbiAgfSk7XG59O1xuXG4vL0hhbmRsZSBrZXlkb3duIGV2ZW50IEVzY2FwZSBjbG9zZVxuZnVuY3Rpb24gaGFuZGxlS2V5RG93bihlKSB7XG4gIG1vZGFsTGlzdC5mb3JFYWNoKChtb2RhbCkgPT4ge1xuICAgIGlmIChlLmtleSA9PT0gXCJFc2NhcGVcIikge1xuICAgICAgY2xvc2VNb2RhbChtb2RhbCk7XG4gICAgfVxuICB9KTtcbn1cblxuLy8gU2V0cyBkZWZhdWx0IHZhbHVlcyB3aGVuIHRoZSBlZGl0IG1vZGFsIGZvcm0gaXMgb3BlbmVkLlxuZnVuY3Rpb24gZmlsbEVkaXRQcm9maWxlRm9ybSgpIHtcbiAgLy8gVXNlcyB0aGUgY3VycmVudCBET00gdmFsdWVzIGFzIHRoZSBkZWZhdWx0IGlucHV0IHZhbHVlcy5cbiAgbmFtZUlucHV0LnZhbHVlID0gcHJvZmlsZU5hbWUudGV4dENvbnRlbnQ7XG4gIGRlc2NyaXB0aW9uSW5wdXQudmFsdWUgPSBwcm9maWxlRGVzY3JpcHRpb24udGV4dENvbnRlbnQ7XG59XG5cbmNvbnN0IGhhbmRsZUNhcmRMaWtlcyA9IChpc0xpa2VkLCBjYXJkTGlrZUJ0bikgPT4ge1xuICBpc0xpa2VkXG4gICAgPyBjYXJkTGlrZUJ0bi5jbGFzc0xpc3QuYWRkKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpXG4gICAgOiBjYXJkTGlrZUJ0bi5jbGFzc0xpc3QucmVtb3ZlKFwiY2FyZF9fbGlrZS1idXR0b25fYWN0aXZlXCIpO1xufTtcblxuZnVuY3Rpb24gaGFuZGxlU3VibWl0QnRuVUkoYnRuKSB7XG4gIGlmIChidG4uZGlzYWJsZWQgPT09IHRydWUpIHtcbiAgICBidG4udGV4dENvbnRlbnQgPSBcIlNhdmVcIjtcbiAgfSBlbHNlIHtcbiAgICBidG4udGV4dENvbnRlbnQgPSBcIlNhdmluZ1wiO1xuICB9XG59XG5cbi8vQXR0YXRjaGVkIHRvIHRoZSB0cmFzaGNhbiBidG4gdXBvbiBjYXJkIGNyZWF0aW9uXG5mdW5jdGlvbiBoYW5kbGVEZWxldGVDYXJkKGNhcmRFTGVtZW50LCBkYXRhKSB7XG4gIHNlbGVjdGVkQ2FyZCA9IGNhcmRFTGVtZW50O1xuICBzZWxlY3RlZENhcmRJZCA9IGRhdGEuX2lkO1xuICBkZWxldGVTdWJtaXRCdG4udGV4dENvbnRlbnQgPSBcIkRlbGV0ZVwiO1xuICBvcGVuTW9kYWwoZGVsZXRlQ2FyZE1vZGFsKTtcbn1cblxuLy8gQ3JlYXRlcyBjYXJkc1xuZnVuY3Rpb24gZ2V0Q2FyZEVsZW1lbnQoZGF0YSkge1xuICAvLyBDbG9uZXMgdGhlIHRlbXBsYXRlIGVsZW1lbnQgYW5kIGFsbCBpdCdzIGNoaWxkcmVuIGZyb20gdGhlIGh0bWwgdG8gYW4gZWRpdGFibGVcbiAgLy8gIGFuZCByZXVzYWJsZSBkb20gb2JqZWN0IGFuZCBzdG9yZXMgaXQgaW4gYSB2YXJpYWJsZSBjYWxsZWQgY2FyZEVsZW1lbnQgdGhlblxuICAvLyBzZWxlY3RzIHRoZSBjaGlsZHJlbiBlbGVtZW50cyBhbmQgaW5qZWN0cyB0aGVtIHdpdGggZGF0YSBmcm9tIHByb3BlcnRpZXMgb2ZcbiAgLy8gdGhlIG9iamVjdHMgaW5zaWRlIHRoZSBhcnJheSBpbml0aWFsQ2FyZHMuXG4gIGNvbnN0IGNhcmRFbGVtZW50ID0gZG9jdW1lbnRcbiAgICAucXVlcnlTZWxlY3RvcihcIiNjYXJkLXRlbXBsYXRlXCIpXG4gICAgLmNvbnRlbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkXCIpXG4gICAgLmNsb25lTm9kZSh0cnVlKTtcblxuICBjb25zdCBjYXJkVGl0bGUgPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX3RpdGxlXCIpO1xuICBjYXJkVGl0bGUudGV4dENvbnRlbnQgPSBkYXRhLm5hbWU7XG4gIGNvbnN0IGNhcmRJbWFnZSA9IGNhcmRFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuY2FyZF9faW1hZ2VcIik7XG4gIGNhcmRJbWFnZS5zcmMgPSBkYXRhLmxpbms7XG4gIGNhcmRJbWFnZS5hbHQgPSBkYXRhLm5hbWU7XG5cbiAgLy8gTWFrZXMgc3VyZSBldmVyeSBjYXJkIHRoYXRzIGNyZWF0ZWQgaGFzIGxpa2UgYnV0dG9uIGFuZCBkZWxldGUgYnV0dG9uIGZ1bmN0aW9uYWxpdHlcbiAgY29uc3QgY2FyZExpa2VCdG4gPSBjYXJkRWxlbWVudC5xdWVyeVNlbGVjdG9yKFwiLmNhcmRfX2xpa2UtYnV0dG9uXCIpO1xuXG4gIC8vISFTZXQgdGhlIGluaXRhbCB2aXN1YWwgc3RhdGUgb2YgdGhlIGJ1dHRvbnMgdXBvbiBsb2FkaW5nIG9yIHRoZSBVSSB3b24ndCBzYXZlXG4gIGhhbmRsZUNhcmRMaWtlcyhkYXRhLmlzTGlrZWQsIGNhcmRMaWtlQnRuKTtcblxuICBjYXJkTGlrZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICAgIGlmIChjYXJkTGlrZUJ0bi5jbGFzc0xpc3QuY29udGFpbnMoXCJjYXJkX19saWtlLWJ1dHRvbl9hY3RpdmVcIikpIHtcbiAgICAgIGFwaVxuICAgICAgICAucmVtb3ZlTGlrZShkYXRhLl9pZClcbiAgICAgICAgLy9Vc2UgdGhlIHJldHVybmVkIGRhdGEgdG8gdXBkYXRlIHRoZSBVSVxuICAgICAgICAudGhlbigodXBkYXRlZCkgPT4ge1xuICAgICAgICAgIGhhbmRsZUNhcmRMaWtlcyh1cGRhdGVkLmlzTGlrZWQsIGNhcmRMaWtlQnRuKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5lcnJvcihlcnJvcikpO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGlcbiAgICAgICAgLmFkZExpa2UoZGF0YS5faWQpXG4gICAgICAgIC50aGVuKCh1cGRhdGVkKSA9PiB7XG4gICAgICAgICAgaGFuZGxlQ2FyZExpa2VzKHVwZGF0ZWQuaXNMaWtlZCwgY2FyZExpa2VCdG4pO1xuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goKGVycm9yKSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XG4gICAgfVxuICB9KTtcblxuICBjb25zdCBjYXJkRGVsZXRlQnRuID0gY2FyZEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5jYXJkX19kZWxldGUtYnV0dG9uXCIpO1xuICBjYXJkRGVsZXRlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgaGFuZGxlRGVsZXRlQ2FyZChjYXJkRWxlbWVudCwgZGF0YSk7XG4gIH0pO1xuXG4gIGNhcmRFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCBmdW5jdGlvbiAoZXZ0KSB7XG4gICAgaWYgKGV2dC50YXJnZXQgPT09IGNhcmRJbWFnZSkge1xuICAgICAgb3Blbk1vZGFsKHByZXZpZXdNb2RhbCk7XG4gICAgICBwcmV2aWV3SW1hZ2Uuc3JjID0gZGF0YS5saW5rO1xuICAgICAgcHJldmlld0ltYWdlLmFsdCA9IGRhdGEubmFtZTtcbiAgICAgIHByZXZpZXdDYXB0aW9uLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuICAgIH1cbiAgfSk7XG5cbiAgcmV0dXJuIGNhcmRFbGVtZW50O1xufVxuLy8gRW5kIG9mIGdldENhcmRFbGVtZW50IGZ1bmN0aW9uXG5cbi8vRk9STSBTVUJNSVNTSU9OIEhBTkRMRVJTXG5cbmZ1bmN0aW9uIGhhbmRsZURlbGV0ZUNhcmRTdWJtaXQoc2VsZWN0ZWRDYXJkLCBzZWxlY3RlZENhcmRJZCkge1xuICBhcGlcbiAgICAucmVtb3ZlQ2FyZChzZWxlY3RlZENhcmRJZClcbiAgICAudGhlbigoKSA9PiB7XG4gICAgICBkZWxldGVTdWJtaXRCdG4udGV4dENvbnRlbnQgPSBcIkRlbGV0aW5nXCI7XG4gICAgICBzZWxlY3RlZENhcmQucmVtb3ZlKCk7XG4gICAgICBjbG9zZU1vZGFsKGRlbGV0ZUNhcmRNb2RhbCk7XG4gICAgfSlcbiAgICAuY2F0Y2goKGVycm9yKSA9PiBjb25zb2xlLmVycm9yKGVycm9yKSk7XG59XG5cbmZ1bmN0aW9uIGhhbmRsZU5ld0F2YXRhclN1Ym1pdCgpIHtcbiAgYXBpXG4gICAgLmVkaXRBdmF0YXIoYXZhdGFySW5wdXQudmFsdWUpXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgIGhhbmRsZVN1Ym1pdEJ0blVJKGVkaXRBdmF0YXJTdWJtaXRCdG4pO1xuICAgICAgcHJvZmlsZUF2YXRhci5zcmMgPSBkYXRhLmF2YXRhcjtcbiAgICAgIGNsb3NlTW9kYWwoZWRpdEF2YXRhck1vZGFsKTtcbiAgICAgIGRpc2FibGVTdWJtaXRCdXR0b24oZWRpdEF2YXRhclN1Ym1pdEJ0biwgc2V0dGluZ3MpO1xuICAgIH0pXG4gICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5lcnJvcihlcnJvcikpO1xufVxuXG5mdW5jdGlvbiBoYW5kbGVFZGl0UHJvZmlsZUZvcm1TdWJtaXQoZSkge1xuICAvLyBQcmV2ZW50cyB0aGUgcGFnZSBmcm9tIHJlZnJlc2hpbmcgd2hlbiB0aGUgc3VibWl0IGJ1dHRvbiBpcyBjbGlja2VkXG4gIGUucHJldmVudERlZmF1bHQoKTtcbiAgY29uc3QgaW5wdXREYXRhID0ge1xuICAgIG5hbWU6IG5hbWVJbnB1dC52YWx1ZSxcbiAgICBhYm91dDogZGVzY3JpcHRpb25JbnB1dC52YWx1ZSxcbiAgfTtcbiAgYXBpXG4gICAgLmVkaXRVc2VySW5mbyhpbnB1dERhdGEpXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgIGhhbmRsZVN1Ym1pdEJ0blVJKGVkaXRQcm9maWxlU3VibWl0QnRuKTtcbiAgICAgIC8vSWYgdGhlIHByb21pc2UgcmVzb2x2ZXMsIHRoZSBET00gdXBkYXRlcyB3aXRoIHRoZSBuZXcgVmFsdWVzIHNhdmVkIHRvIHRoZSBzZXJ2ZXJcbiAgICAgIHByb2ZpbGVOYW1lLnRleHRDb250ZW50ID0gZGF0YS5uYW1lO1xuICAgICAgcHJvZmlsZURlc2NyaXB0aW9uLnRleHRDb250ZW50ID0gZGF0YS5hYm91dDtcbiAgICAgIGNsb3NlTW9kYWwoZWRpdFByb2ZpbGVNb2RhbCk7XG4gICAgICBkaXNhYmxlU3VibWl0QnV0dG9uKGVkaXRQcm9maWxlU3VibWl0QnRuLCBzZXR0aW5ncyk7XG4gICAgfSlcbiAgICAvL01ha2UgYSB2aXNpYmxlIFVYIHJlc3BvbnNlIGxhdGVyXG4gICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5lcnJvcihlcnJvcikpO1xufVxuXG4vLyBOZXcgcG9zdCBzdWJtaXNzb24gaGFuZGxlclxuZnVuY3Rpb24gaGFuZGxlQWRkQ2FyZFN1Ym1pdChldnQpIHtcbiAgZXZ0LnByZXZlbnREZWZhdWx0KCk7XG4gIGNvbnN0IGlucHV0RGF0YSA9IHtcbiAgICBuYW1lOiBjYXB0aW9uSW5wdXQudmFsdWUsXG4gICAgbGluazogbGlua0lucHV0LnZhbHVlLFxuICB9O1xuICBhcGlcbiAgICAuYWRkTmV3Q2FyZChpbnB1dERhdGEpXG4gICAgLnRoZW4oKGRhdGEpID0+IHtcbiAgICAgIGhhbmRsZVN1Ym1pdEJ0blVJKG5ld1Bvc3RTdWJtaXRCdG4pO1xuICAgICAgY29uc3QgY2FyZCA9IGdldENhcmRFbGVtZW50KGRhdGEpO1xuICAgICAgY2FyZHNMaXN0LnByZXBlbmQoY2FyZCk7XG4gICAgICBuZXdQb3N0Rm9ybS5yZXNldCgpO1xuICAgICAgY2xvc2VNb2RhbChuZXdQb3N0TW9kYWwpO1xuICAgICAgZGlzYWJsZVN1Ym1pdEJ1dHRvbihuZXdQb3N0U3VibWl0QnRuLCBzZXR0aW5ncyk7XG4gICAgfSlcbiAgICAvLyBmaWd1cmUgb3V0IGhvdyB0byBtYWtlIGFuIGVycm9yIG1lc3NhZ2UgYXBwZWFyIGluIHRoZSBmb3JtXG4gICAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5lcnJvcihlcnJvcikpO1xufVxuXG4vL0ZMT1dcblxuY29uc3QgYXBpID0gbmV3IEFQSSh7XG4gIGJhc2VVcmw6IFwiaHR0cHM6Ly9hcm91bmQtYXBpLmVuLnRyaXBsZXRlbi1zZXJ2aWNlcy5jb20vdjFcIixcbiAgaGVhZGVyczoge1xuICAgIGF1dGhvcml6YXRpb246IFwiNjQwMjY0YTctZDgzMy00MDc2LWE2NDMtYzcxY2M3N2RhNzYxXCIsXG4gICAgXCJjb250ZW50LXR5cGVcIjogXCJhcHBsaWNhdGlvbi9qc29uXCIsXG4gIH0sXG59KTtcblxuLy9NYWtlIEdFVCByZXF1ZXN0cyB0byByZXRyaWV2ZSBkYXRhIHVwb24gcGFnZSBsb2FkXG5hcGlcbiAgLmdldEFwcERhdGEoKVxuICAudGhlbigoZGF0YSkgPT4ge1xuICAgIC8vZGF0YSBpcyBhbiBhcnJheSB3aXRoIHR3byBlbGVtZW50cyB0aGF0IGNvbWVzIGZyb21zIGEgUHJvbWlzZS5hbGwgY2FsbCB0aGF0XG4gICAgLy8gbG9hZHMgdGhlIGluaXRpYWwgZGF0YSBmcm9tIHRoZSBzZXJ2ZXIuIFRoZSBmaXJzdCBlbGVtZW50IGlzIGFuIGFycmF5IG9mIGNhcmRzXG4gICAgLy9hbmQgdGhlIHNlY29uZCBlbGVtZW50IGlzIHRoZSB1c2VySW5mby5cbiAgICBjb25zdCBbY2FyZERhdGEsIHVzZXJEYXRhXSA9IGRhdGE7XG4gICAgY2FyZERhdGEuZm9yRWFjaCgoaXRlbSkgPT4ge1xuICAgICAgY29uc3QgY2FyZCA9IGdldENhcmRFbGVtZW50KGl0ZW0pO1xuICAgICAgY2FyZHNMaXN0LmFwcGVuZChjYXJkKTtcbiAgICB9KTtcblxuICAgIHByb2ZpbGVBdmF0YXIuc3JjID0gdXNlckRhdGEuYXZhdGFyO1xuICAgIHByb2ZpbGVOYW1lLnRleHRDb250ZW50ID0gdXNlckRhdGEubmFtZTtcbiAgICBwcm9maWxlRGVzY3JpcHRpb24udGV4dENvbnRlbnQgPSB1c2VyRGF0YS5hYm91dDtcbiAgfSlcbiAgLmNhdGNoKChlcnJvcikgPT4gY29uc29sZS5lcnJvcihlcnJvcikpO1xuXG5lbmFibGVWYWxpZGF0aW9uKHNldHRpbmdzKTtcblxuLy8gT3BlbiBidXR0b24gbGlzdGVuZXJzXG5cbmVkaXRBdmF0YXJPcGVuQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoZSkgPT4ge1xuICBoYW5kbGVTdWJtaXRCdG5VSShlZGl0QXZhdGFyU3VibWl0QnRuKTtcbiAgb3Blbk1vZGFsKGVkaXRBdmF0YXJNb2RhbCk7XG59KTtcblxuLy8gRWRpdCBQcm9maWxlIG9wZW4gZXZlbnQgbGlzdGVuZXJcbmVkaXRNb2RhbE9wZW5CdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcbiAgaGFuZGxlU3VibWl0QnRuVUkoZWRpdFByb2ZpbGVTdWJtaXRCdG4pO1xuICBvcGVuTW9kYWwoZWRpdFByb2ZpbGVNb2RhbCk7XG4gIHJlc2V0VmFsaWRhdGlvbihlZGl0UHJvZmlsZUZvcm0sIFtuYW1lSW5wdXQsIGRlc2NyaXB0aW9uSW5wdXRdLCBzZXR0aW5ncyk7XG4gIGZpbGxFZGl0UHJvZmlsZUZvcm0oKTtcbn0pO1xuXG4vLyBOZXcgcG9zdCBvcGVuIGV2ZW50IGxpc3RlbmVyXG5uZXdQb3N0T3BlbkJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4ge1xuICBoYW5kbGVTdWJtaXRCdG5VSShuZXdQb3N0U3VibWl0QnRuKTtcbiAgb3Blbk1vZGFsKG5ld1Bvc3RNb2RhbCk7XG59KTtcblxuLy9DbG9zZSBidXR0b24gbGlzdGVuZXJzXG5lZGl0TW9kYWxDbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT4gY2xvc2VNb2RhbChlZGl0UHJvZmlsZU1vZGFsKSk7XG5uZXdQb3N0Q2xvc2VCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IGNsb3NlTW9kYWwobmV3UG9zdE1vZGFsKSk7XG5wcmV2aWV3Q2xvc2VCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IGNsb3NlTW9kYWwocHJldmlld01vZGFsKSk7XG5kZWxldGVDYXJkTW9kYWxDbG9zZUJ0bi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCkgPT5cbiAgY2xvc2VNb2RhbChkZWxldGVDYXJkTW9kYWwpXG4pO1xuY2FuY2VsQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBjbG9zZU1vZGFsKGRlbGV0ZUNhcmRNb2RhbCkpO1xuZWRpdEF2YXRhckNsb3NlQnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiBjbG9zZU1vZGFsKGVkaXRBdmF0YXJNb2RhbCkpO1xuXG4vL2hhbmRsZSBjbGljayB0byBjbG9zZSBldmVudHNcbmNvbnN0IG1vZGFsTGlzdCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubW9kYWxcIik7XG5tb2RhbExpc3QuZm9yRWFjaCgobW9kYWwpID0+IGhhbmRsZUNsaWNrVG9DbG9zZShtb2RhbCkpO1xuXG4vL0Zvcm0gU3VibWlzc2lvbiBsaXN0ZW5lcnNcblxuLy8gTmV3IHBvc3Qgc3VibWl0IGxpc3RlbmVyXG5uZXdQb3N0Rm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIGhhbmRsZUFkZENhcmRTdWJtaXQpO1xuXG4vLyBFZGl0IFByb2ZpbGUgc3VibWl0IGxpc3RlbmVyXG5lZGl0UHJvZmlsZUZvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCBoYW5kbGVFZGl0UHJvZmlsZUZvcm1TdWJtaXQpO1xuXG4vL0ZvciBkZWxldGluZyBjYXJkc1xuLy9SZW1vdmUgY2FyZCBmcm9tIHRoZSBET01cbmxldCBzZWxlY3RlZENhcmQ7XG4vL1JlbW92ZSBjYXJkIGZyb20gdGhlIHNlcnZlclxubGV0IHNlbGVjdGVkQ2FyZElkO1xuXG5jYXJkRGVsZXRlRm9ybS5hZGRFdmVudExpc3RlbmVyKFwic3VibWl0XCIsIChlKSA9PiB7XG4gIGUucHJldmVudERlZmF1bHQoKTtcbiAgaGFuZGxlRGVsZXRlQ2FyZFN1Ym1pdChzZWxlY3RlZENhcmQsIHNlbGVjdGVkQ2FyZElkKTtcbn0pO1xuXG5uZXdBdmF0YXJGb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcbiAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICBoYW5kbGVOZXdBdmF0YXJTdWJtaXQoKTtcbn0pO1xuXG5leHBvcnQge1xuICBlZGl0TW9kYWxPcGVuQnRuLFxuICBlZGl0UHJvZmlsZU1vZGFsLFxuICBlZGl0TW9kYWxDbG9zZUJ0bixcbiAgZWRpdFByb2ZpbGVTdWJtaXRCdG4sXG4gIG5ld1Bvc3RNb2RhbCxcbiAgbmV3UG9zdE9wZW5CdG4sXG4gIG5ld1Bvc3RDbG9zZUJ0bixcbiAgbmV3UG9zdFN1Ym1pdEJ0bixcbiAgcHJvZmlsZU5hbWUsXG4gIGRlc2NyaXB0aW9uSW5wdXQsXG4gIG5hbWVJbnB1dCxcbiAgbGlua0lucHV0LFxuICBjYXB0aW9uSW5wdXQsXG4gIGVkaXRQcm9maWxlRm9ybSxcbiAgbmV3UG9zdEZvcm0sXG4gIHByZXZpZXdNb2RhbCxcbiAgcHJldmlld0Nsb3NlQnRuLFxuICBwcmV2aWV3Q2FwdGlvbixcbiAgcHJldmlld0ltYWdlLFxuICBvcGVuTW9kYWwsXG4gIGNsb3NlTW9kYWwsXG4gIGhhbmRsZUNsaWNrVG9DbG9zZSxcbiAgaGFuZGxlS2V5RG93bixcbiAgbW9kYWxMaXN0LFxuICBoYW5kbGVBZGRDYXJkU3VibWl0LFxuICBmaWxsRWRpdFByb2ZpbGVGb3JtLFxuICBoYW5kbGVFZGl0UHJvZmlsZUZvcm1TdWJtaXQsXG4gIGdldENhcmRFbGVtZW50LFxuICBjYXJkc0xpc3QsXG59O1xuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQVBJIHtcbiAgY29uc3RydWN0b3Iob3B0aW9ucykge1xuICAgIHRoaXMuX2Jhc2VVcmwgPSBvcHRpb25zLmJhc2VVcmw7XG4gICAgdGhpcy5faGVhZGVycyA9IG9wdGlvbnMuaGVhZGVycztcbiAgfVxuICAvL0RSWVxuICBfaGFuZGxlUmVzcG9uc2UocmVzKSB7XG4gICAgcmV0dXJuIHJlcy5vayA/IHJlcy5qc29uKCkgOiBQcm9taXNlLnJlamVjdChgRXJyb3I6ICR7cmVzLnN0YXR1c31gKTtcbiAgfVxuXG4gIF9nZXRJbml0aWFsQ2FyZHMoKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzYCwge1xuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuX2hhbmRsZVJlc3BvbnNlKTtcbiAgfVxuXG4gIF9nZXRVc2VySW5mbygpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vdXNlcnMvbWVgLCB7XG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlUmVzcG9uc2UpO1xuICB9XG5cbiAgZ2V0QXBwRGF0YSgpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwoW3RoaXMuX2dldEluaXRpYWxDYXJkcygpLCB0aGlzLl9nZXRVc2VySW5mbygpXSk7XG4gIH1cblxuICBlZGl0VXNlckluZm8oeyBuYW1lLCBhYm91dCB9KSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L3VzZXJzL21lYCwge1xuICAgICAgbWV0aG9kOiBcIlBBVENIXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lLFxuICAgICAgICBhYm91dCxcbiAgICAgIH0pLFxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlUmVzcG9uc2UpO1xuICB9XG5cbiAgYWRkTmV3Q2FyZCh7IG5hbWUsIGxpbmsgfSkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkc2AsIHtcbiAgICAgIG1ldGhvZDogXCJQT1NUXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoe1xuICAgICAgICBuYW1lLFxuICAgICAgICBsaW5rLFxuICAgICAgfSksXG4gICAgfSkudGhlbih0aGlzLl9oYW5kbGVSZXNwb25zZSk7XG4gIH1cblxuICByZW1vdmVDYXJkKGlkKSB7XG4gICAgcmV0dXJuIGZldGNoKGAke3RoaXMuX2Jhc2VVcmx9L2NhcmRzLyR7aWR9YCwge1xuICAgICAgbWV0aG9kOiBcIkRFTEVURVwiLFxuICAgICAgaGVhZGVyczogdGhpcy5faGVhZGVycyxcbiAgICB9KS50aGVuKHRoaXMuX2hhbmRsZVJlc3BvbnNlKTtcbiAgfVxuXG4gIHJlbW92ZUxpa2UoaWQpIHtcbiAgICByZXR1cm4gZmV0Y2goYCR7dGhpcy5fYmFzZVVybH0vY2FyZHMvJHtpZH0vbGlrZXNgLCB7XG4gICAgICBtZXRob2Q6IFwiREVMRVRFXCIsXG4gICAgICBoZWFkZXJzOiB0aGlzLl9oZWFkZXJzLFxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlUmVzcG9uc2UpO1xuICB9XG5cbiAgYWRkTGlrZShpZCkge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS9jYXJkcy8ke2lkfS9saWtlc2AsIHtcbiAgICAgIG1ldGhvZDogXCJQVVRcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgfSkudGhlbih0aGlzLl9oYW5kbGVSZXNwb25zZSk7XG4gIH1cblxuICBlZGl0QXZhdGFyKGF2YXRhcikge1xuICAgIHJldHVybiBmZXRjaChgJHt0aGlzLl9iYXNlVXJsfS91c2Vycy9tZS9hdmF0YXJgLCB7XG4gICAgICBtZXRob2Q6IFwiUEFUQ0hcIixcbiAgICAgIGhlYWRlcnM6IHRoaXMuX2hlYWRlcnMsXG4gICAgICBib2R5OiBKU09OLnN0cmluZ2lmeSh7XG4gICAgICAgIGF2YXRhcixcbiAgICAgIH0pLFxuICAgIH0pLnRoZW4odGhpcy5faGFuZGxlUmVzcG9uc2UpO1xuICB9XG59XG4iXSwibmFtZXMiOlsic2V0dGluZ3MiLCJmb3JtU2VsZWN0b3IiLCJpbnB1dFNlbGVjdG9yIiwic3VibWl0QnV0dG9uU2VsZWN0b3IiLCJpbmFjdGl2ZUJ1dHRvbkNsYXNzIiwiaW5wdXRFcnJvckNsYXNzIiwiZXJyb3JDbGFzcyIsImhpZGVJbnB1dEVycm9yIiwiZm9ybUVsIiwiaW5wdXRFbCIsImNvbmZpZyIsImlucHV0RXJyb3IiLCJxdWVyeVNlbGVjdG9yIiwiaWQiLCJ0ZXh0Q29udGVudCIsImNsYXNzTGlzdCIsInJlbW92ZSIsImRpc2FibGVTdWJtaXRCdXR0b24iLCJidXR0b25FbCIsImFkZCIsImRpc2FibGVkIiwidG9nZ2xlU3VibWl0QnV0dG9uIiwiaW5wdXRzIiwic29tZSIsImlucHV0IiwidmFsaWRpdHkiLCJ2YWxpZCIsImhhc0ludmFsaWRJbnB1dCIsImVuYWJsZVZhbGlkYXRpb24iLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3JBbGwiLCJmb3JFYWNoIiwic2V0RXZlbnRMaXN0ZW5lcnMiLCJpbnB1dExpc3QiLCJBcnJheSIsImZyb20iLCJzdWJtaXRCdG4iLCJhZGRFdmVudExpc3RlbmVyIiwiY2hlY2tJbnB1dFZhbGlkaXR5Iiwic2hvd0lucHV0RXJyb3IiLCJlcnJvck1zZyIsInZhbGlkYXRpb25NZXNzYWdlIiwiZWRpdFByb2ZpbGVGb3JtIiwiZm9ybXMiLCJuZXdQb3N0Rm9ybSIsImNhcmREZWxldGVGb3JtIiwibmV3QXZhdGFyRm9ybSIsImVkaXRQcm9maWxlTW9kYWwiLCJlZGl0TW9kYWxPcGVuQnRuIiwiZWRpdE1vZGFsQ2xvc2VCdG4iLCJlZGl0UHJvZmlsZVN1Ym1pdEJ0biIsIm5hbWVJbnB1dCIsImRlc2NyaXB0aW9uSW5wdXQiLCJwcm9maWxlTmFtZSIsInByb2ZpbGVEZXNjcmlwdGlvbiIsIm5ld1Bvc3RNb2RhbCIsIm5ld1Bvc3RPcGVuQnRuIiwibmV3UG9zdENsb3NlQnRuIiwibmV3UG9zdFN1Ym1pdEJ0biIsImxpbmtJbnB1dCIsImNhcHRpb25JbnB1dCIsInByZXZpZXdNb2RhbCIsInByZXZpZXdDbG9zZUJ0biIsInByZXZpZXdJbWFnZSIsInByZXZpZXdDYXB0aW9uIiwiZWRpdEF2YXRhck1vZGFsIiwiZWRpdEF2YXRhck9wZW5CdG4iLCJlZGl0QXZhdGFyQ2xvc2VCdG4iLCJlZGl0QXZhdGFyU3VibWl0QnRuIiwicHJvZmlsZUF2YXRhciIsImdldEVsZW1lbnRCeUlkIiwiYXZhdGFySW5wdXQiLCJkZWxldGVDYXJkTW9kYWwiLCJkZWxldGVDYXJkTW9kYWxDbG9zZUJ0biIsImNhbmNlbEJ0biIsImRlbGV0ZVN1Ym1pdEJ0biIsImNhcmRzTGlzdCIsIm9wZW5Nb2RhbCIsIm1vZGFsIiwiaGFuZGxlS2V5RG93biIsImNsb3NlTW9kYWwiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwiZSIsIm1vZGFsTGlzdCIsImtleSIsImhhbmRsZUNhcmRMaWtlcyIsImlzTGlrZWQiLCJjYXJkTGlrZUJ0biIsImhhbmRsZVN1Ym1pdEJ0blVJIiwiYnRuIiwiZ2V0Q2FyZEVsZW1lbnQiLCJkYXRhIiwiY2FyZEVsZW1lbnQiLCJjb250ZW50IiwiY2xvbmVOb2RlIiwibmFtZSIsImNhcmRJbWFnZSIsInNyYyIsImxpbmsiLCJhbHQiLCJjb250YWlucyIsImFwaSIsInJlbW92ZUxpa2UiLCJfaWQiLCJ0aGVuIiwidXBkYXRlZCIsImNhdGNoIiwiZXJyb3IiLCJjb25zb2xlIiwiYWRkTGlrZSIsImNhcmRFTGVtZW50Iiwic2VsZWN0ZWRDYXJkIiwic2VsZWN0ZWRDYXJkSWQiLCJoYW5kbGVEZWxldGVDYXJkIiwiZXZ0IiwidGFyZ2V0IiwiY29uc3RydWN0b3IiLCJvcHRpb25zIiwidGhpcyIsIl9iYXNlVXJsIiwiYmFzZVVybCIsIl9oZWFkZXJzIiwiaGVhZGVycyIsIl9oYW5kbGVSZXNwb25zZSIsInJlcyIsIm9rIiwianNvbiIsIlByb21pc2UiLCJyZWplY3QiLCJzdGF0dXMiLCJfZ2V0SW5pdGlhbENhcmRzIiwiZmV0Y2giLCJfZ2V0VXNlckluZm8iLCJnZXRBcHBEYXRhIiwiYWxsIiwiZWRpdFVzZXJJbmZvIiwiYWJvdXQiLCJtZXRob2QiLCJib2R5IiwiSlNPTiIsInN0cmluZ2lmeSIsImFkZE5ld0NhcmQiLCJyZW1vdmVDYXJkIiwiZWRpdEF2YXRhciIsImF2YXRhciIsImF1dGhvcml6YXRpb24iLCJjYXJkRGF0YSIsInVzZXJEYXRhIiwiaXRlbSIsImNhcmQiLCJhcHBlbmQiLCJyZXNldFZhbGlkYXRpb24iLCJ2YWx1ZSIsImNsb3Nlc3QiLCJoYW5kbGVDbGlja1RvQ2xvc2UiLCJwcmV2ZW50RGVmYXVsdCIsImlucHV0RGF0YSIsInByZXBlbmQiLCJyZXNldCIsImhhbmRsZURlbGV0ZUNhcmRTdWJtaXQiXSwic291cmNlUm9vdCI6IiJ9